'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var dev = require('@w5s/dev');
var fs = require('fs');
var nodePath = require('path');
var process = require('process');
var findUp = require('find-up');
var parseGitignore = require('parse-gitignore');
var prettierConfig = require('@w5s/prettier-config');
var importPlugin = require('eslint-plugin-import');

function _interopDefault (e) { return e && e.__esModule ? e : { default: e }; }

var fs__default = /*#__PURE__*/_interopDefault(fs);
var nodePath__default = /*#__PURE__*/_interopDefault(nodePath);
var process__default = /*#__PURE__*/_interopDefault(process);
var findUp__default = /*#__PURE__*/_interopDefault(findUp);
var parseGitignore__default = /*#__PURE__*/_interopDefault(parseGitignore);
var prettierConfig__default = /*#__PURE__*/_interopDefault(prettierConfig);
var importPlugin__default = /*#__PURE__*/_interopDefault(importPlugin);

var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  __defProp(target, "default", { value: mod, enumerable: true }) ,
  mod
));

// ../../node_modules/globals/globals.json
var require_globals = __commonJS({
  "../../node_modules/globals/globals.json"(exports, module) {
    module.exports = {
      amd: {
        define: false,
        require: false
      },
      applescript: {
        $: false,
        Application: false,
        Automation: false,
        console: false,
        delay: false,
        Library: false,
        ObjC: false,
        ObjectSpecifier: false,
        Path: false,
        Progress: false,
        Ref: false
      },
      atomtest: {
        advanceClock: false,
        atom: false,
        fakeClearInterval: false,
        fakeClearTimeout: false,
        fakeSetInterval: false,
        fakeSetTimeout: false,
        resetTimeouts: false,
        waitsForPromise: false
      },
      browser: {
        AbortController: false,
        AbortSignal: false,
        AbsoluteOrientationSensor: false,
        AbstractRange: false,
        Accelerometer: false,
        addEventListener: false,
        ai: false,
        AI: false,
        AITextSession: false,
        alert: false,
        AnalyserNode: false,
        Animation: false,
        AnimationEffect: false,
        AnimationEvent: false,
        AnimationPlaybackEvent: false,
        AnimationTimeline: false,
        atob: false,
        Attr: false,
        Audio: false,
        AudioBuffer: false,
        AudioBufferSourceNode: false,
        AudioContext: false,
        AudioData: false,
        AudioDecoder: false,
        AudioDestinationNode: false,
        AudioEncoder: false,
        AudioListener: false,
        AudioNode: false,
        AudioParam: false,
        AudioParamMap: false,
        AudioProcessingEvent: false,
        AudioScheduledSourceNode: false,
        AudioSinkInfo: false,
        AudioWorklet: false,
        AudioWorkletGlobalScope: false,
        AudioWorkletNode: false,
        AudioWorkletProcessor: false,
        AuthenticatorAssertionResponse: false,
        AuthenticatorAttestationResponse: false,
        AuthenticatorResponse: false,
        BackgroundFetchManager: false,
        BackgroundFetchRecord: false,
        BackgroundFetchRegistration: false,
        BarcodeDetector: false,
        BarProp: false,
        BaseAudioContext: false,
        BatteryManager: false,
        BeforeUnloadEvent: false,
        BiquadFilterNode: false,
        Blob: false,
        BlobEvent: false,
        Bluetooth: false,
        BluetoothCharacteristicProperties: false,
        BluetoothDevice: false,
        BluetoothRemoteGATTCharacteristic: false,
        BluetoothRemoteGATTDescriptor: false,
        BluetoothRemoteGATTServer: false,
        BluetoothRemoteGATTService: false,
        BluetoothUUID: false,
        blur: false,
        BroadcastChannel: false,
        BrowserCaptureMediaStreamTrack: false,
        btoa: false,
        ByteLengthQueuingStrategy: false,
        Cache: false,
        caches: false,
        CacheStorage: false,
        cancelAnimationFrame: false,
        cancelIdleCallback: false,
        CanvasCaptureMediaStream: false,
        CanvasCaptureMediaStreamTrack: false,
        CanvasGradient: false,
        CanvasPattern: false,
        CanvasRenderingContext2D: false,
        CaptureController: false,
        CaretPosition: false,
        CDATASection: false,
        ChannelMergerNode: false,
        ChannelSplitterNode: false,
        ChapterInformation: false,
        CharacterBoundsUpdateEvent: false,
        CharacterData: false,
        clearInterval: false,
        clearTimeout: false,
        clientInformation: false,
        Clipboard: false,
        ClipboardEvent: false,
        ClipboardItem: false,
        close: false,
        closed: false,
        CloseEvent: false,
        CloseWatcher: false,
        Comment: false,
        CompositionEvent: false,
        CompressionStream: false,
        confirm: false,
        console: false,
        ConstantSourceNode: false,
        ContentVisibilityAutoStateChangeEvent: false,
        ConvolverNode: false,
        CookieChangeEvent: false,
        CookieDeprecationLabel: false,
        cookieStore: false,
        CookieStore: false,
        CookieStoreManager: false,
        CountQueuingStrategy: false,
        createImageBitmap: false,
        Credential: false,
        credentialless: false,
        CredentialsContainer: false,
        CropTarget: false,
        crossOriginIsolated: false,
        crypto: false,
        Crypto: false,
        CryptoKey: false,
        CSS: false,
        CSSAnimation: false,
        CSSConditionRule: false,
        CSSContainerRule: false,
        CSSCounterStyleRule: false,
        CSSFontFaceRule: false,
        CSSFontFeatureValuesRule: false,
        CSSFontPaletteValuesRule: false,
        CSSGroupingRule: false,
        CSSImageValue: false,
        CSSImportRule: false,
        CSSKeyframeRule: false,
        CSSKeyframesRule: false,
        CSSKeywordValue: false,
        CSSLayerBlockRule: false,
        CSSLayerStatementRule: false,
        CSSMarginRule: false,
        CSSMathClamp: false,
        CSSMathInvert: false,
        CSSMathMax: false,
        CSSMathMin: false,
        CSSMathNegate: false,
        CSSMathProduct: false,
        CSSMathSum: false,
        CSSMathValue: false,
        CSSMatrixComponent: false,
        CSSMediaRule: false,
        CSSNamespaceRule: false,
        CSSNestedDeclarations: false,
        CSSNumericArray: false,
        CSSNumericValue: false,
        CSSPageDescriptors: false,
        CSSPageRule: false,
        CSSPerspective: false,
        CSSPositionTryDescriptors: false,
        CSSPositionTryRule: false,
        CSSPositionValue: false,
        CSSPropertyRule: false,
        CSSRotate: false,
        CSSRule: false,
        CSSRuleList: false,
        CSSScale: false,
        CSSScopeRule: false,
        CSSSkew: false,
        CSSSkewX: false,
        CSSSkewY: false,
        CSSStartingStyleRule: false,
        CSSStyleDeclaration: false,
        CSSStyleRule: false,
        CSSStyleSheet: false,
        CSSStyleValue: false,
        CSSSupportsRule: false,
        CSSTransformComponent: false,
        CSSTransformValue: false,
        CSSTransition: false,
        CSSTranslate: false,
        CSSUnitValue: false,
        CSSUnparsedValue: false,
        CSSVariableReferenceValue: false,
        CSSViewTransitionRule: false,
        currentFrame: false,
        currentTime: false,
        CustomElementRegistry: false,
        customElements: false,
        CustomEvent: false,
        CustomStateSet: false,
        DataTransfer: false,
        DataTransferItem: false,
        DataTransferItemList: false,
        DecompressionStream: false,
        DelayNode: false,
        DelegatedInkTrailPresenter: false,
        DeviceMotionEvent: false,
        DeviceMotionEventAcceleration: false,
        DeviceMotionEventRotationRate: false,
        DeviceOrientationEvent: false,
        devicePixelRatio: false,
        dispatchEvent: false,
        document: false,
        Document: false,
        DocumentFragment: false,
        documentPictureInPicture: false,
        DocumentPictureInPicture: false,
        DocumentPictureInPictureEvent: false,
        DocumentTimeline: false,
        DocumentType: false,
        DOMError: false,
        DOMException: false,
        DOMImplementation: false,
        DOMMatrix: false,
        DOMMatrixReadOnly: false,
        DOMParser: false,
        DOMPoint: false,
        DOMPointReadOnly: false,
        DOMQuad: false,
        DOMRect: false,
        DOMRectList: false,
        DOMRectReadOnly: false,
        DOMStringList: false,
        DOMStringMap: false,
        DOMTokenList: false,
        DragEvent: false,
        DynamicsCompressorNode: false,
        EditContext: false,
        Element: false,
        ElementInternals: false,
        EncodedAudioChunk: false,
        EncodedVideoChunk: false,
        ErrorEvent: false,
        event: false,
        Event: false,
        EventCounts: false,
        EventSource: false,
        EventTarget: false,
        external: false,
        External: false,
        EyeDropper: false,
        FeaturePolicy: false,
        FederatedCredential: false,
        fence: false,
        Fence: false,
        FencedFrameConfig: false,
        fetch: false,
        fetchLater: false,
        FetchLaterResult: false,
        File: false,
        FileList: false,
        FileReader: false,
        FileSystem: false,
        FileSystemDirectoryEntry: false,
        FileSystemDirectoryHandle: false,
        FileSystemDirectoryReader: false,
        FileSystemEntry: false,
        FileSystemFileEntry: false,
        FileSystemFileHandle: false,
        FileSystemHandle: false,
        FileSystemWritableFileStream: false,
        find: false,
        Float16Array: false,
        focus: false,
        FocusEvent: false,
        FontData: false,
        FontFace: false,
        FontFaceSet: false,
        FontFaceSetLoadEvent: false,
        FormData: false,
        FormDataEvent: false,
        FragmentDirective: false,
        frameElement: false,
        frames: false,
        GainNode: false,
        Gamepad: false,
        GamepadAxisMoveEvent: false,
        GamepadButton: false,
        GamepadButtonEvent: false,
        GamepadEvent: false,
        GamepadHapticActuator: false,
        GamepadPose: false,
        Geolocation: false,
        GeolocationCoordinates: false,
        GeolocationPosition: false,
        GeolocationPositionError: false,
        getComputedStyle: false,
        getScreenDetails: false,
        getSelection: false,
        GPU: false,
        GPUAdapter: false,
        GPUAdapterInfo: false,
        GPUBindGroup: false,
        GPUBindGroupLayout: false,
        GPUBuffer: false,
        GPUBufferUsage: false,
        GPUCanvasContext: false,
        GPUColorWrite: false,
        GPUCommandBuffer: false,
        GPUCommandEncoder: false,
        GPUCompilationInfo: false,
        GPUCompilationMessage: false,
        GPUComputePassEncoder: false,
        GPUComputePipeline: false,
        GPUDevice: false,
        GPUDeviceLostInfo: false,
        GPUError: false,
        GPUExternalTexture: false,
        GPUInternalError: false,
        GPUMapMode: false,
        GPUOutOfMemoryError: false,
        GPUPipelineError: false,
        GPUPipelineLayout: false,
        GPUQuerySet: false,
        GPUQueue: false,
        GPURenderBundle: false,
        GPURenderBundleEncoder: false,
        GPURenderPassEncoder: false,
        GPURenderPipeline: false,
        GPUSampler: false,
        GPUShaderModule: false,
        GPUShaderStage: false,
        GPUSupportedFeatures: false,
        GPUSupportedLimits: false,
        GPUTexture: false,
        GPUTextureUsage: false,
        GPUTextureView: false,
        GPUUncapturedErrorEvent: false,
        GPUValidationError: false,
        GravitySensor: false,
        Gyroscope: false,
        HashChangeEvent: false,
        Headers: false,
        HID: false,
        HIDConnectionEvent: false,
        HIDDevice: false,
        HIDInputReportEvent: false,
        Highlight: false,
        HighlightRegistry: false,
        history: false,
        History: false,
        HTMLAllCollection: false,
        HTMLAnchorElement: false,
        HTMLAreaElement: false,
        HTMLAudioElement: false,
        HTMLBaseElement: false,
        HTMLBodyElement: false,
        HTMLBRElement: false,
        HTMLButtonElement: false,
        HTMLCanvasElement: false,
        HTMLCollection: false,
        HTMLDataElement: false,
        HTMLDataListElement: false,
        HTMLDetailsElement: false,
        HTMLDialogElement: false,
        HTMLDirectoryElement: false,
        HTMLDivElement: false,
        HTMLDListElement: false,
        HTMLDocument: false,
        HTMLElement: false,
        HTMLEmbedElement: false,
        HTMLFencedFrameElement: false,
        HTMLFieldSetElement: false,
        HTMLFontElement: false,
        HTMLFormControlsCollection: false,
        HTMLFormElement: false,
        HTMLFrameElement: false,
        HTMLFrameSetElement: false,
        HTMLHeadElement: false,
        HTMLHeadingElement: false,
        HTMLHRElement: false,
        HTMLHtmlElement: false,
        HTMLIFrameElement: false,
        HTMLImageElement: false,
        HTMLInputElement: false,
        HTMLLabelElement: false,
        HTMLLegendElement: false,
        HTMLLIElement: false,
        HTMLLinkElement: false,
        HTMLMapElement: false,
        HTMLMarqueeElement: false,
        HTMLMediaElement: false,
        HTMLMenuElement: false,
        HTMLMetaElement: false,
        HTMLMeterElement: false,
        HTMLModElement: false,
        HTMLObjectElement: false,
        HTMLOListElement: false,
        HTMLOptGroupElement: false,
        HTMLOptionElement: false,
        HTMLOptionsCollection: false,
        HTMLOutputElement: false,
        HTMLParagraphElement: false,
        HTMLParamElement: false,
        HTMLPictureElement: false,
        HTMLPreElement: false,
        HTMLProgressElement: false,
        HTMLQuoteElement: false,
        HTMLScriptElement: false,
        HTMLSelectElement: false,
        HTMLSlotElement: false,
        HTMLSourceElement: false,
        HTMLSpanElement: false,
        HTMLStyleElement: false,
        HTMLTableCaptionElement: false,
        HTMLTableCellElement: false,
        HTMLTableColElement: false,
        HTMLTableElement: false,
        HTMLTableRowElement: false,
        HTMLTableSectionElement: false,
        HTMLTemplateElement: false,
        HTMLTextAreaElement: false,
        HTMLTimeElement: false,
        HTMLTitleElement: false,
        HTMLTrackElement: false,
        HTMLUListElement: false,
        HTMLUnknownElement: false,
        HTMLVideoElement: false,
        IDBCursor: false,
        IDBCursorWithValue: false,
        IDBDatabase: false,
        IDBFactory: false,
        IDBIndex: false,
        IDBKeyRange: false,
        IDBObjectStore: false,
        IDBOpenDBRequest: false,
        IDBRequest: false,
        IDBTransaction: false,
        IDBVersionChangeEvent: false,
        IdentityCredential: false,
        IdentityCredentialError: false,
        IdentityProvider: false,
        IdleDeadline: false,
        IdleDetector: false,
        IIRFilterNode: false,
        Image: false,
        ImageBitmap: false,
        ImageBitmapRenderingContext: false,
        ImageCapture: false,
        ImageData: false,
        ImageDecoder: false,
        ImageTrack: false,
        ImageTrackList: false,
        indexedDB: false,
        Ink: false,
        innerHeight: false,
        innerWidth: false,
        InputDeviceCapabilities: false,
        InputDeviceInfo: false,
        InputEvent: false,
        IntersectionObserver: false,
        IntersectionObserverEntry: false,
        isSecureContext: false,
        Keyboard: false,
        KeyboardEvent: false,
        KeyboardLayoutMap: false,
        KeyframeEffect: false,
        LargestContentfulPaint: false,
        LaunchParams: false,
        launchQueue: false,
        LaunchQueue: false,
        LayoutShift: false,
        LayoutShiftAttribution: false,
        length: false,
        LinearAccelerationSensor: false,
        localStorage: false,
        location: true,
        Location: false,
        locationbar: false,
        Lock: false,
        LockManager: false,
        matchMedia: false,
        MathMLElement: false,
        MediaCapabilities: false,
        MediaCapabilitiesInfo: false,
        MediaDeviceInfo: false,
        MediaDevices: false,
        MediaElementAudioSourceNode: false,
        MediaEncryptedEvent: false,
        MediaError: false,
        MediaKeyError: false,
        MediaKeyMessageEvent: false,
        MediaKeys: false,
        MediaKeySession: false,
        MediaKeyStatusMap: false,
        MediaKeySystemAccess: false,
        MediaList: false,
        MediaMetadata: false,
        MediaQueryList: false,
        MediaQueryListEvent: false,
        MediaRecorder: false,
        MediaRecorderErrorEvent: false,
        MediaSession: false,
        MediaSource: false,
        MediaSourceHandle: false,
        MediaStream: false,
        MediaStreamAudioDestinationNode: false,
        MediaStreamAudioSourceNode: false,
        MediaStreamEvent: false,
        MediaStreamTrack: false,
        MediaStreamTrackAudioSourceNode: false,
        MediaStreamTrackAudioStats: false,
        MediaStreamTrackEvent: false,
        MediaStreamTrackGenerator: false,
        MediaStreamTrackProcessor: false,
        MediaStreamTrackVideoStats: false,
        menubar: false,
        MessageChannel: false,
        MessageEvent: false,
        MessagePort: false,
        MIDIAccess: false,
        MIDIConnectionEvent: false,
        MIDIInput: false,
        MIDIInputMap: false,
        MIDIMessageEvent: false,
        MIDIOutput: false,
        MIDIOutputMap: false,
        MIDIPort: false,
        MimeType: false,
        MimeTypeArray: false,
        model: false,
        ModelGenericSession: false,
        ModelManager: false,
        MouseEvent: false,
        moveBy: false,
        moveTo: false,
        MutationEvent: false,
        MutationObserver: false,
        MutationRecord: false,
        name: false,
        NamedNodeMap: false,
        NavigateEvent: false,
        navigation: false,
        Navigation: false,
        NavigationActivation: false,
        NavigationCurrentEntryChangeEvent: false,
        NavigationDestination: false,
        NavigationHistoryEntry: false,
        NavigationPreloadManager: false,
        NavigationTransition: false,
        navigator: false,
        Navigator: false,
        NavigatorLogin: false,
        NavigatorManagedData: false,
        NavigatorUAData: false,
        NetworkInformation: false,
        Node: false,
        NodeFilter: false,
        NodeIterator: false,
        NodeList: false,
        Notification: false,
        NotifyPaintEvent: false,
        NotRestoredReasonDetails: false,
        NotRestoredReasons: false,
        OfflineAudioCompletionEvent: false,
        OfflineAudioContext: false,
        offscreenBuffering: false,
        OffscreenCanvas: false,
        OffscreenCanvasRenderingContext2D: false,
        onabort: true,
        onafterprint: true,
        onanimationcancel: true,
        onanimationend: true,
        onanimationiteration: true,
        onanimationstart: true,
        onappinstalled: true,
        onauxclick: true,
        onbeforeinput: true,
        onbeforeinstallprompt: true,
        onbeforematch: true,
        onbeforeprint: true,
        onbeforetoggle: true,
        onbeforeunload: true,
        onbeforexrselect: true,
        onblur: true,
        oncancel: true,
        oncanplay: true,
        oncanplaythrough: true,
        onchange: true,
        onclick: true,
        onclose: true,
        oncontentvisibilityautostatechange: true,
        oncontextlost: true,
        oncontextmenu: true,
        oncontextrestored: true,
        oncopy: true,
        oncuechange: true,
        oncut: true,
        ondblclick: true,
        ondevicemotion: true,
        ondeviceorientation: true,
        ondeviceorientationabsolute: true,
        ondrag: true,
        ondragend: true,
        ondragenter: true,
        ondragleave: true,
        ondragover: true,
        ondragstart: true,
        ondrop: true,
        ondurationchange: true,
        onemptied: true,
        onended: true,
        onerror: true,
        onfocus: true,
        onformdata: true,
        ongamepadconnected: true,
        ongamepaddisconnected: true,
        ongotpointercapture: true,
        onhashchange: true,
        oninput: true,
        oninvalid: true,
        onkeydown: true,
        onkeypress: true,
        onkeyup: true,
        onlanguagechange: true,
        onload: true,
        onloadeddata: true,
        onloadedmetadata: true,
        onloadstart: true,
        onlostpointercapture: true,
        onmessage: true,
        onmessageerror: true,
        onmousedown: true,
        onmouseenter: true,
        onmouseleave: true,
        onmousemove: true,
        onmouseout: true,
        onmouseover: true,
        onmouseup: true,
        onmousewheel: true,
        onoffline: true,
        ononline: true,
        onpagehide: true,
        onpagereveal: true,
        onpageshow: true,
        onpageswap: true,
        onpaste: true,
        onpause: true,
        onplay: true,
        onplaying: true,
        onpointercancel: true,
        onpointerdown: true,
        onpointerenter: true,
        onpointerleave: true,
        onpointermove: true,
        onpointerout: true,
        onpointerover: true,
        onpointerrawupdate: true,
        onpointerup: true,
        onpopstate: true,
        onprogress: true,
        onratechange: true,
        onrejectionhandled: true,
        onreset: true,
        onresize: true,
        onscroll: true,
        onscrollend: true,
        onscrollsnapchange: true,
        onscrollsnapchanging: true,
        onsearch: true,
        onsecuritypolicyviolation: true,
        onseeked: true,
        onseeking: true,
        onselect: true,
        onselectionchange: true,
        onselectstart: true,
        onslotchange: true,
        onstalled: true,
        onstorage: true,
        onsubmit: true,
        onsuspend: true,
        ontimeupdate: true,
        ontoggle: true,
        ontransitioncancel: true,
        ontransitionend: true,
        ontransitionrun: true,
        ontransitionstart: true,
        onunhandledrejection: true,
        onunload: true,
        onvolumechange: true,
        onwaiting: true,
        onwheel: true,
        open: false,
        opener: false,
        Option: false,
        OrientationSensor: false,
        origin: false,
        originAgentCluster: false,
        OscillatorNode: false,
        OTPCredential: false,
        outerHeight: false,
        outerWidth: false,
        OverconstrainedError: false,
        PageRevealEvent: false,
        PageSwapEvent: false,
        PageTransitionEvent: false,
        pageXOffset: false,
        pageYOffset: false,
        PannerNode: false,
        parent: false,
        PasswordCredential: false,
        Path2D: false,
        PaymentAddress: false,
        PaymentManager: false,
        PaymentMethodChangeEvent: false,
        PaymentRequest: false,
        PaymentRequestUpdateEvent: false,
        PaymentResponse: false,
        performance: false,
        Performance: false,
        PerformanceElementTiming: false,
        PerformanceEntry: false,
        PerformanceEventTiming: false,
        PerformanceLongAnimationFrameTiming: false,
        PerformanceLongTaskTiming: false,
        PerformanceMark: false,
        PerformanceMeasure: false,
        PerformanceNavigation: false,
        PerformanceNavigationTiming: false,
        PerformanceObserver: false,
        PerformanceObserverEntryList: false,
        PerformancePaintTiming: false,
        PerformanceResourceTiming: false,
        PerformanceScriptTiming: false,
        PerformanceServerTiming: false,
        PerformanceTiming: false,
        PeriodicSyncManager: false,
        PeriodicWave: false,
        Permissions: false,
        PermissionStatus: false,
        PERSISTENT: false,
        personalbar: false,
        PictureInPictureEvent: false,
        PictureInPictureWindow: false,
        Plugin: false,
        PluginArray: false,
        PointerEvent: false,
        PopStateEvent: false,
        postMessage: false,
        Presentation: false,
        PresentationAvailability: false,
        PresentationConnection: false,
        PresentationConnectionAvailableEvent: false,
        PresentationConnectionCloseEvent: false,
        PresentationConnectionList: false,
        PresentationReceiver: false,
        PresentationRequest: false,
        PressureObserver: false,
        PressureRecord: false,
        print: false,
        ProcessingInstruction: false,
        Profiler: false,
        ProgressEvent: false,
        PromiseRejectionEvent: false,
        prompt: false,
        ProtectedAudience: false,
        PublicKeyCredential: false,
        PushManager: false,
        PushSubscription: false,
        PushSubscriptionOptions: false,
        queryLocalFonts: false,
        queueMicrotask: false,
        RadioNodeList: false,
        Range: false,
        ReadableByteStreamController: false,
        ReadableStream: false,
        ReadableStreamBYOBReader: false,
        ReadableStreamBYOBRequest: false,
        ReadableStreamDefaultController: false,
        ReadableStreamDefaultReader: false,
        registerProcessor: false,
        RelativeOrientationSensor: false,
        RemotePlayback: false,
        removeEventListener: false,
        reportError: false,
        ReportingObserver: false,
        Request: false,
        requestAnimationFrame: false,
        requestIdleCallback: false,
        resizeBy: false,
        ResizeObserver: false,
        ResizeObserverEntry: false,
        ResizeObserverSize: false,
        resizeTo: false,
        Response: false,
        RTCCertificate: false,
        RTCDataChannel: false,
        RTCDataChannelEvent: false,
        RTCDtlsTransport: false,
        RTCDTMFSender: false,
        RTCDTMFToneChangeEvent: false,
        RTCEncodedAudioFrame: false,
        RTCEncodedVideoFrame: false,
        RTCError: false,
        RTCErrorEvent: false,
        RTCIceCandidate: false,
        RTCIceTransport: false,
        RTCPeerConnection: false,
        RTCPeerConnectionIceErrorEvent: false,
        RTCPeerConnectionIceEvent: false,
        RTCRtpReceiver: false,
        RTCRtpScriptTransform: false,
        RTCRtpSender: false,
        RTCRtpTransceiver: false,
        RTCSctpTransport: false,
        RTCSessionDescription: false,
        RTCStatsReport: false,
        RTCTrackEvent: false,
        sampleRate: false,
        scheduler: false,
        Scheduler: false,
        Scheduling: false,
        screen: false,
        Screen: false,
        ScreenDetailed: false,
        ScreenDetails: false,
        screenLeft: false,
        ScreenOrientation: false,
        screenTop: false,
        screenX: false,
        screenY: false,
        ScriptProcessorNode: false,
        scroll: false,
        scrollbars: false,
        scrollBy: false,
        ScrollTimeline: false,
        scrollTo: false,
        scrollX: false,
        scrollY: false,
        SecurityPolicyViolationEvent: false,
        Selection: false,
        self: false,
        Sensor: false,
        SensorErrorEvent: false,
        Serial: false,
        SerialPort: false,
        ServiceWorker: false,
        ServiceWorkerContainer: false,
        ServiceWorkerRegistration: false,
        sessionStorage: false,
        setInterval: false,
        setTimeout: false,
        ShadowRoot: false,
        sharedStorage: false,
        SharedStorage: false,
        SharedStorageWorklet: false,
        SharedWorker: false,
        showDirectoryPicker: false,
        showOpenFilePicker: false,
        showSaveFilePicker: false,
        SnapEvent: false,
        SourceBuffer: false,
        SourceBufferList: false,
        speechSynthesis: false,
        SpeechSynthesis: false,
        SpeechSynthesisErrorEvent: false,
        SpeechSynthesisEvent: false,
        SpeechSynthesisUtterance: false,
        SpeechSynthesisVoice: false,
        StaticRange: false,
        status: false,
        statusbar: false,
        StereoPannerNode: false,
        stop: false,
        Storage: false,
        StorageBucket: false,
        StorageBucketManager: false,
        StorageEvent: false,
        StorageManager: false,
        structuredClone: false,
        styleMedia: false,
        StylePropertyMap: false,
        StylePropertyMapReadOnly: false,
        StyleSheet: false,
        StyleSheetList: false,
        SubmitEvent: false,
        SubtleCrypto: false,
        SVGAElement: false,
        SVGAngle: false,
        SVGAnimatedAngle: false,
        SVGAnimatedBoolean: false,
        SVGAnimatedEnumeration: false,
        SVGAnimatedInteger: false,
        SVGAnimatedLength: false,
        SVGAnimatedLengthList: false,
        SVGAnimatedNumber: false,
        SVGAnimatedNumberList: false,
        SVGAnimatedPreserveAspectRatio: false,
        SVGAnimatedRect: false,
        SVGAnimatedString: false,
        SVGAnimatedTransformList: false,
        SVGAnimateElement: false,
        SVGAnimateMotionElement: false,
        SVGAnimateTransformElement: false,
        SVGAnimationElement: false,
        SVGCircleElement: false,
        SVGClipPathElement: false,
        SVGComponentTransferFunctionElement: false,
        SVGDefsElement: false,
        SVGDescElement: false,
        SVGElement: false,
        SVGEllipseElement: false,
        SVGFEBlendElement: false,
        SVGFEColorMatrixElement: false,
        SVGFEComponentTransferElement: false,
        SVGFECompositeElement: false,
        SVGFEConvolveMatrixElement: false,
        SVGFEDiffuseLightingElement: false,
        SVGFEDisplacementMapElement: false,
        SVGFEDistantLightElement: false,
        SVGFEDropShadowElement: false,
        SVGFEFloodElement: false,
        SVGFEFuncAElement: false,
        SVGFEFuncBElement: false,
        SVGFEFuncGElement: false,
        SVGFEFuncRElement: false,
        SVGFEGaussianBlurElement: false,
        SVGFEImageElement: false,
        SVGFEMergeElement: false,
        SVGFEMergeNodeElement: false,
        SVGFEMorphologyElement: false,
        SVGFEOffsetElement: false,
        SVGFEPointLightElement: false,
        SVGFESpecularLightingElement: false,
        SVGFESpotLightElement: false,
        SVGFETileElement: false,
        SVGFETurbulenceElement: false,
        SVGFilterElement: false,
        SVGForeignObjectElement: false,
        SVGGElement: false,
        SVGGeometryElement: false,
        SVGGradientElement: false,
        SVGGraphicsElement: false,
        SVGImageElement: false,
        SVGLength: false,
        SVGLengthList: false,
        SVGLinearGradientElement: false,
        SVGLineElement: false,
        SVGMarkerElement: false,
        SVGMaskElement: false,
        SVGMatrix: false,
        SVGMetadataElement: false,
        SVGMPathElement: false,
        SVGNumber: false,
        SVGNumberList: false,
        SVGPathElement: false,
        SVGPatternElement: false,
        SVGPoint: false,
        SVGPointList: false,
        SVGPolygonElement: false,
        SVGPolylineElement: false,
        SVGPreserveAspectRatio: false,
        SVGRadialGradientElement: false,
        SVGRect: false,
        SVGRectElement: false,
        SVGScriptElement: false,
        SVGSetElement: false,
        SVGStopElement: false,
        SVGStringList: false,
        SVGStyleElement: false,
        SVGSVGElement: false,
        SVGSwitchElement: false,
        SVGSymbolElement: false,
        SVGTextContentElement: false,
        SVGTextElement: false,
        SVGTextPathElement: false,
        SVGTextPositioningElement: false,
        SVGTitleElement: false,
        SVGTransform: false,
        SVGTransformList: false,
        SVGTSpanElement: false,
        SVGUnitTypes: false,
        SVGUseElement: false,
        SVGViewElement: false,
        SyncManager: false,
        TaskAttributionTiming: false,
        TaskController: false,
        TaskPriorityChangeEvent: false,
        TaskSignal: false,
        TEMPORARY: false,
        Text: false,
        TextDecoder: false,
        TextDecoderStream: false,
        TextEncoder: false,
        TextEncoderStream: false,
        TextEvent: false,
        TextFormat: false,
        TextFormatUpdateEvent: false,
        TextMetrics: false,
        TextTrack: false,
        TextTrackCue: false,
        TextTrackCueList: false,
        TextTrackList: false,
        TextUpdateEvent: false,
        TimeEvent: false,
        TimeRanges: false,
        ToggleEvent: false,
        toolbar: false,
        top: false,
        Touch: false,
        TouchEvent: false,
        TouchList: false,
        TrackEvent: false,
        TransformStream: false,
        TransformStreamDefaultController: false,
        TransitionEvent: false,
        TreeWalker: false,
        TrustedHTML: false,
        TrustedScript: false,
        TrustedScriptURL: false,
        TrustedTypePolicy: false,
        TrustedTypePolicyFactory: false,
        trustedTypes: false,
        UIEvent: false,
        URL: false,
        URLPattern: false,
        URLSearchParams: false,
        USB: false,
        USBAlternateInterface: false,
        USBConfiguration: false,
        USBConnectionEvent: false,
        USBDevice: false,
        USBEndpoint: false,
        USBInterface: false,
        USBInTransferResult: false,
        USBIsochronousInTransferPacket: false,
        USBIsochronousInTransferResult: false,
        USBIsochronousOutTransferPacket: false,
        USBIsochronousOutTransferResult: false,
        USBOutTransferResult: false,
        UserActivation: false,
        ValidityState: false,
        VideoColorSpace: false,
        VideoDecoder: false,
        VideoEncoder: false,
        VideoFrame: false,
        VideoPlaybackQuality: false,
        ViewTimeline: false,
        ViewTransition: false,
        ViewTransitionTypeSet: false,
        VirtualKeyboard: false,
        VirtualKeyboardGeometryChangeEvent: false,
        VisibilityStateEntry: false,
        visualViewport: false,
        VisualViewport: false,
        VTTCue: false,
        VTTRegion: false,
        WakeLock: false,
        WakeLockSentinel: false,
        WaveShaperNode: false,
        WebAssembly: false,
        WebGL2RenderingContext: false,
        WebGLActiveInfo: false,
        WebGLBuffer: false,
        WebGLContextEvent: false,
        WebGLFramebuffer: false,
        WebGLObject: false,
        WebGLProgram: false,
        WebGLQuery: false,
        WebGLRenderbuffer: false,
        WebGLRenderingContext: false,
        WebGLSampler: false,
        WebGLShader: false,
        WebGLShaderPrecisionFormat: false,
        WebGLSync: false,
        WebGLTexture: false,
        WebGLTransformFeedback: false,
        WebGLUniformLocation: false,
        WebGLVertexArrayObject: false,
        WebSocket: false,
        WebSocketError: false,
        WebSocketStream: false,
        WebTransport: false,
        WebTransportBidirectionalStream: false,
        WebTransportDatagramDuplexStream: false,
        WebTransportError: false,
        WebTransportReceiveStream: false,
        WebTransportSendStream: false,
        WGSLLanguageFeatures: false,
        WheelEvent: false,
        window: false,
        Window: false,
        WindowControlsOverlay: false,
        WindowControlsOverlayGeometryChangeEvent: false,
        Worker: false,
        Worklet: false,
        WorkletGlobalScope: false,
        WritableStream: false,
        WritableStreamDefaultController: false,
        WritableStreamDefaultWriter: false,
        XMLDocument: false,
        XMLHttpRequest: false,
        XMLHttpRequestEventTarget: false,
        XMLHttpRequestUpload: false,
        XMLSerializer: false,
        XPathEvaluator: false,
        XPathExpression: false,
        XPathResult: false,
        XRAnchor: false,
        XRAnchorSet: false,
        XRBoundedReferenceSpace: false,
        XRCamera: false,
        XRCPUDepthInformation: false,
        XRDepthInformation: false,
        XRDOMOverlayState: false,
        XRFrame: false,
        XRHand: false,
        XRHitTestResult: false,
        XRHitTestSource: false,
        XRInputSource: false,
        XRInputSourceArray: false,
        XRInputSourceEvent: false,
        XRInputSourcesChangeEvent: false,
        XRJointPose: false,
        XRJointSpace: false,
        XRLayer: false,
        XRLightEstimate: false,
        XRLightProbe: false,
        XRPose: false,
        XRRay: false,
        XRReferenceSpace: false,
        XRReferenceSpaceEvent: false,
        XRRenderState: false,
        XRRigidTransform: false,
        XRSession: false,
        XRSessionEvent: false,
        XRSpace: false,
        XRSystem: false,
        XRTransientInputHitTestResult: false,
        XRTransientInputHitTestSource: false,
        XRView: false,
        XRViewerPose: false,
        XRViewport: false,
        XRWebGLBinding: false,
        XRWebGLDepthInformation: false,
        XRWebGLLayer: false,
        XSLTProcessor: false
      },
      builtin: {
        AggregateError: false,
        Array: false,
        ArrayBuffer: false,
        Atomics: false,
        BigInt: false,
        BigInt64Array: false,
        BigUint64Array: false,
        Boolean: false,
        DataView: false,
        Date: false,
        decodeURI: false,
        decodeURIComponent: false,
        encodeURI: false,
        encodeURIComponent: false,
        Error: false,
        escape: false,
        eval: false,
        EvalError: false,
        FinalizationRegistry: false,
        Float32Array: false,
        Float64Array: false,
        Function: false,
        globalThis: false,
        Infinity: false,
        Int16Array: false,
        Int32Array: false,
        Int8Array: false,
        Intl: false,
        isFinite: false,
        isNaN: false,
        Iterator: false,
        JSON: false,
        Map: false,
        Math: false,
        NaN: false,
        Number: false,
        Object: false,
        parseFloat: false,
        parseInt: false,
        Promise: false,
        Proxy: false,
        RangeError: false,
        ReferenceError: false,
        Reflect: false,
        RegExp: false,
        Set: false,
        SharedArrayBuffer: false,
        String: false,
        Symbol: false,
        SyntaxError: false,
        TypeError: false,
        Uint16Array: false,
        Uint32Array: false,
        Uint8Array: false,
        Uint8ClampedArray: false,
        undefined: false,
        unescape: false,
        URIError: false,
        WeakMap: false,
        WeakRef: false,
        WeakSet: false
      },
      chai: {
        assert: true,
        expect: true,
        should: true
      },
      commonjs: {
        exports: true,
        global: false,
        module: false,
        require: false
      },
      couch: {
        emit: false,
        exports: false,
        getRow: false,
        log: false,
        module: false,
        provides: false,
        require: false,
        respond: false,
        send: false,
        start: false,
        sum: false
      },
      devtools: {
        $: false,
        $_: false,
        $$: false,
        $0: false,
        $1: false,
        $2: false,
        $3: false,
        $4: false,
        $x: false,
        chrome: false,
        clear: false,
        copy: false,
        debug: false,
        dir: false,
        dirxml: false,
        getEventListeners: false,
        inspect: false,
        keys: false,
        monitor: false,
        monitorEvents: false,
        profile: false,
        profileEnd: false,
        queryObjects: false,
        table: false,
        undebug: false,
        unmonitor: false,
        unmonitorEvents: false,
        values: false
      },
      embertest: {
        andThen: false,
        click: false,
        currentPath: false,
        currentRouteName: false,
        currentURL: false,
        fillIn: false,
        find: false,
        findAll: false,
        findWithAssert: false,
        keyEvent: false,
        pauseTest: false,
        resumeTest: false,
        triggerEvent: false,
        visit: false,
        wait: false
      },
      es2015: {
        Array: false,
        ArrayBuffer: false,
        Boolean: false,
        DataView: false,
        Date: false,
        decodeURI: false,
        decodeURIComponent: false,
        encodeURI: false,
        encodeURIComponent: false,
        Error: false,
        escape: false,
        eval: false,
        EvalError: false,
        Float32Array: false,
        Float64Array: false,
        Function: false,
        Infinity: false,
        Int16Array: false,
        Int32Array: false,
        Int8Array: false,
        Intl: false,
        isFinite: false,
        isNaN: false,
        JSON: false,
        Map: false,
        Math: false,
        NaN: false,
        Number: false,
        Object: false,
        parseFloat: false,
        parseInt: false,
        Promise: false,
        Proxy: false,
        RangeError: false,
        ReferenceError: false,
        Reflect: false,
        RegExp: false,
        Set: false,
        String: false,
        Symbol: false,
        SyntaxError: false,
        TypeError: false,
        Uint16Array: false,
        Uint32Array: false,
        Uint8Array: false,
        Uint8ClampedArray: false,
        undefined: false,
        unescape: false,
        URIError: false,
        WeakMap: false,
        WeakSet: false
      },
      es2016: {
        Array: false,
        ArrayBuffer: false,
        Boolean: false,
        DataView: false,
        Date: false,
        decodeURI: false,
        decodeURIComponent: false,
        encodeURI: false,
        encodeURIComponent: false,
        Error: false,
        escape: false,
        eval: false,
        EvalError: false,
        Float32Array: false,
        Float64Array: false,
        Function: false,
        Infinity: false,
        Int16Array: false,
        Int32Array: false,
        Int8Array: false,
        Intl: false,
        isFinite: false,
        isNaN: false,
        JSON: false,
        Map: false,
        Math: false,
        NaN: false,
        Number: false,
        Object: false,
        parseFloat: false,
        parseInt: false,
        Promise: false,
        Proxy: false,
        RangeError: false,
        ReferenceError: false,
        Reflect: false,
        RegExp: false,
        Set: false,
        String: false,
        Symbol: false,
        SyntaxError: false,
        TypeError: false,
        Uint16Array: false,
        Uint32Array: false,
        Uint8Array: false,
        Uint8ClampedArray: false,
        undefined: false,
        unescape: false,
        URIError: false,
        WeakMap: false,
        WeakSet: false
      },
      es2017: {
        Array: false,
        ArrayBuffer: false,
        Atomics: false,
        Boolean: false,
        DataView: false,
        Date: false,
        decodeURI: false,
        decodeURIComponent: false,
        encodeURI: false,
        encodeURIComponent: false,
        Error: false,
        escape: false,
        eval: false,
        EvalError: false,
        Float32Array: false,
        Float64Array: false,
        Function: false,
        Infinity: false,
        Int16Array: false,
        Int32Array: false,
        Int8Array: false,
        Intl: false,
        isFinite: false,
        isNaN: false,
        JSON: false,
        Map: false,
        Math: false,
        NaN: false,
        Number: false,
        Object: false,
        parseFloat: false,
        parseInt: false,
        Promise: false,
        Proxy: false,
        RangeError: false,
        ReferenceError: false,
        Reflect: false,
        RegExp: false,
        Set: false,
        SharedArrayBuffer: false,
        String: false,
        Symbol: false,
        SyntaxError: false,
        TypeError: false,
        Uint16Array: false,
        Uint32Array: false,
        Uint8Array: false,
        Uint8ClampedArray: false,
        undefined: false,
        unescape: false,
        URIError: false,
        WeakMap: false,
        WeakSet: false
      },
      es2018: {
        Array: false,
        ArrayBuffer: false,
        Atomics: false,
        Boolean: false,
        DataView: false,
        Date: false,
        decodeURI: false,
        decodeURIComponent: false,
        encodeURI: false,
        encodeURIComponent: false,
        Error: false,
        escape: false,
        eval: false,
        EvalError: false,
        Float32Array: false,
        Float64Array: false,
        Function: false,
        Infinity: false,
        Int16Array: false,
        Int32Array: false,
        Int8Array: false,
        Intl: false,
        isFinite: false,
        isNaN: false,
        JSON: false,
        Map: false,
        Math: false,
        NaN: false,
        Number: false,
        Object: false,
        parseFloat: false,
        parseInt: false,
        Promise: false,
        Proxy: false,
        RangeError: false,
        ReferenceError: false,
        Reflect: false,
        RegExp: false,
        Set: false,
        SharedArrayBuffer: false,
        String: false,
        Symbol: false,
        SyntaxError: false,
        TypeError: false,
        Uint16Array: false,
        Uint32Array: false,
        Uint8Array: false,
        Uint8ClampedArray: false,
        undefined: false,
        unescape: false,
        URIError: false,
        WeakMap: false,
        WeakSet: false
      },
      es2019: {
        Array: false,
        ArrayBuffer: false,
        Atomics: false,
        Boolean: false,
        DataView: false,
        Date: false,
        decodeURI: false,
        decodeURIComponent: false,
        encodeURI: false,
        encodeURIComponent: false,
        Error: false,
        escape: false,
        eval: false,
        EvalError: false,
        Float32Array: false,
        Float64Array: false,
        Function: false,
        Infinity: false,
        Int16Array: false,
        Int32Array: false,
        Int8Array: false,
        Intl: false,
        isFinite: false,
        isNaN: false,
        JSON: false,
        Map: false,
        Math: false,
        NaN: false,
        Number: false,
        Object: false,
        parseFloat: false,
        parseInt: false,
        Promise: false,
        Proxy: false,
        RangeError: false,
        ReferenceError: false,
        Reflect: false,
        RegExp: false,
        Set: false,
        SharedArrayBuffer: false,
        String: false,
        Symbol: false,
        SyntaxError: false,
        TypeError: false,
        Uint16Array: false,
        Uint32Array: false,
        Uint8Array: false,
        Uint8ClampedArray: false,
        undefined: false,
        unescape: false,
        URIError: false,
        WeakMap: false,
        WeakSet: false
      },
      es2020: {
        Array: false,
        ArrayBuffer: false,
        Atomics: false,
        BigInt: false,
        BigInt64Array: false,
        BigUint64Array: false,
        Boolean: false,
        DataView: false,
        Date: false,
        decodeURI: false,
        decodeURIComponent: false,
        encodeURI: false,
        encodeURIComponent: false,
        Error: false,
        escape: false,
        eval: false,
        EvalError: false,
        Float32Array: false,
        Float64Array: false,
        Function: false,
        globalThis: false,
        Infinity: false,
        Int16Array: false,
        Int32Array: false,
        Int8Array: false,
        Intl: false,
        isFinite: false,
        isNaN: false,
        JSON: false,
        Map: false,
        Math: false,
        NaN: false,
        Number: false,
        Object: false,
        parseFloat: false,
        parseInt: false,
        Promise: false,
        Proxy: false,
        RangeError: false,
        ReferenceError: false,
        Reflect: false,
        RegExp: false,
        Set: false,
        SharedArrayBuffer: false,
        String: false,
        Symbol: false,
        SyntaxError: false,
        TypeError: false,
        Uint16Array: false,
        Uint32Array: false,
        Uint8Array: false,
        Uint8ClampedArray: false,
        undefined: false,
        unescape: false,
        URIError: false,
        WeakMap: false,
        WeakSet: false
      },
      es2021: {
        AggregateError: false,
        Array: false,
        ArrayBuffer: false,
        Atomics: false,
        BigInt: false,
        BigInt64Array: false,
        BigUint64Array: false,
        Boolean: false,
        DataView: false,
        Date: false,
        decodeURI: false,
        decodeURIComponent: false,
        encodeURI: false,
        encodeURIComponent: false,
        Error: false,
        escape: false,
        eval: false,
        EvalError: false,
        FinalizationRegistry: false,
        Float32Array: false,
        Float64Array: false,
        Function: false,
        globalThis: false,
        Infinity: false,
        Int16Array: false,
        Int32Array: false,
        Int8Array: false,
        Intl: false,
        isFinite: false,
        isNaN: false,
        JSON: false,
        Map: false,
        Math: false,
        NaN: false,
        Number: false,
        Object: false,
        parseFloat: false,
        parseInt: false,
        Promise: false,
        Proxy: false,
        RangeError: false,
        ReferenceError: false,
        Reflect: false,
        RegExp: false,
        Set: false,
        SharedArrayBuffer: false,
        String: false,
        Symbol: false,
        SyntaxError: false,
        TypeError: false,
        Uint16Array: false,
        Uint32Array: false,
        Uint8Array: false,
        Uint8ClampedArray: false,
        undefined: false,
        unescape: false,
        URIError: false,
        WeakMap: false,
        WeakRef: false,
        WeakSet: false
      },
      es2022: {
        AggregateError: false,
        Array: false,
        ArrayBuffer: false,
        Atomics: false,
        BigInt: false,
        BigInt64Array: false,
        BigUint64Array: false,
        Boolean: false,
        DataView: false,
        Date: false,
        decodeURI: false,
        decodeURIComponent: false,
        encodeURI: false,
        encodeURIComponent: false,
        Error: false,
        escape: false,
        eval: false,
        EvalError: false,
        FinalizationRegistry: false,
        Float32Array: false,
        Float64Array: false,
        Function: false,
        globalThis: false,
        Infinity: false,
        Int16Array: false,
        Int32Array: false,
        Int8Array: false,
        Intl: false,
        isFinite: false,
        isNaN: false,
        JSON: false,
        Map: false,
        Math: false,
        NaN: false,
        Number: false,
        Object: false,
        parseFloat: false,
        parseInt: false,
        Promise: false,
        Proxy: false,
        RangeError: false,
        ReferenceError: false,
        Reflect: false,
        RegExp: false,
        Set: false,
        SharedArrayBuffer: false,
        String: false,
        Symbol: false,
        SyntaxError: false,
        TypeError: false,
        Uint16Array: false,
        Uint32Array: false,
        Uint8Array: false,
        Uint8ClampedArray: false,
        undefined: false,
        unescape: false,
        URIError: false,
        WeakMap: false,
        WeakRef: false,
        WeakSet: false
      },
      es2023: {
        AggregateError: false,
        Array: false,
        ArrayBuffer: false,
        Atomics: false,
        BigInt: false,
        BigInt64Array: false,
        BigUint64Array: false,
        Boolean: false,
        DataView: false,
        Date: false,
        decodeURI: false,
        decodeURIComponent: false,
        encodeURI: false,
        encodeURIComponent: false,
        Error: false,
        escape: false,
        eval: false,
        EvalError: false,
        FinalizationRegistry: false,
        Float32Array: false,
        Float64Array: false,
        Function: false,
        globalThis: false,
        Infinity: false,
        Int16Array: false,
        Int32Array: false,
        Int8Array: false,
        Intl: false,
        isFinite: false,
        isNaN: false,
        JSON: false,
        Map: false,
        Math: false,
        NaN: false,
        Number: false,
        Object: false,
        parseFloat: false,
        parseInt: false,
        Promise: false,
        Proxy: false,
        RangeError: false,
        ReferenceError: false,
        Reflect: false,
        RegExp: false,
        Set: false,
        SharedArrayBuffer: false,
        String: false,
        Symbol: false,
        SyntaxError: false,
        TypeError: false,
        Uint16Array: false,
        Uint32Array: false,
        Uint8Array: false,
        Uint8ClampedArray: false,
        undefined: false,
        unescape: false,
        URIError: false,
        WeakMap: false,
        WeakRef: false,
        WeakSet: false
      },
      es2024: {
        AggregateError: false,
        Array: false,
        ArrayBuffer: false,
        Atomics: false,
        BigInt: false,
        BigInt64Array: false,
        BigUint64Array: false,
        Boolean: false,
        DataView: false,
        Date: false,
        decodeURI: false,
        decodeURIComponent: false,
        encodeURI: false,
        encodeURIComponent: false,
        Error: false,
        escape: false,
        eval: false,
        EvalError: false,
        FinalizationRegistry: false,
        Float32Array: false,
        Float64Array: false,
        Function: false,
        globalThis: false,
        Infinity: false,
        Int16Array: false,
        Int32Array: false,
        Int8Array: false,
        Intl: false,
        isFinite: false,
        isNaN: false,
        JSON: false,
        Map: false,
        Math: false,
        NaN: false,
        Number: false,
        Object: false,
        parseFloat: false,
        parseInt: false,
        Promise: false,
        Proxy: false,
        RangeError: false,
        ReferenceError: false,
        Reflect: false,
        RegExp: false,
        Set: false,
        SharedArrayBuffer: false,
        String: false,
        Symbol: false,
        SyntaxError: false,
        TypeError: false,
        Uint16Array: false,
        Uint32Array: false,
        Uint8Array: false,
        Uint8ClampedArray: false,
        undefined: false,
        unescape: false,
        URIError: false,
        WeakMap: false,
        WeakRef: false,
        WeakSet: false
      },
      es2025: {
        AggregateError: false,
        Array: false,
        ArrayBuffer: false,
        Atomics: false,
        BigInt: false,
        BigInt64Array: false,
        BigUint64Array: false,
        Boolean: false,
        DataView: false,
        Date: false,
        decodeURI: false,
        decodeURIComponent: false,
        encodeURI: false,
        encodeURIComponent: false,
        Error: false,
        escape: false,
        eval: false,
        EvalError: false,
        FinalizationRegistry: false,
        Float32Array: false,
        Float64Array: false,
        Function: false,
        globalThis: false,
        Infinity: false,
        Int16Array: false,
        Int32Array: false,
        Int8Array: false,
        Intl: false,
        isFinite: false,
        isNaN: false,
        Iterator: false,
        JSON: false,
        Map: false,
        Math: false,
        NaN: false,
        Number: false,
        Object: false,
        parseFloat: false,
        parseInt: false,
        Promise: false,
        Proxy: false,
        RangeError: false,
        ReferenceError: false,
        Reflect: false,
        RegExp: false,
        Set: false,
        SharedArrayBuffer: false,
        String: false,
        Symbol: false,
        SyntaxError: false,
        TypeError: false,
        Uint16Array: false,
        Uint32Array: false,
        Uint8Array: false,
        Uint8ClampedArray: false,
        undefined: false,
        unescape: false,
        URIError: false,
        WeakMap: false,
        WeakRef: false,
        WeakSet: false
      },
      es3: {
        Array: false,
        Boolean: false,
        Date: false,
        decodeURI: false,
        decodeURIComponent: false,
        encodeURI: false,
        encodeURIComponent: false,
        Error: false,
        escape: false,
        eval: false,
        EvalError: false,
        Function: false,
        Infinity: false,
        isFinite: false,
        isNaN: false,
        Math: false,
        NaN: false,
        Number: false,
        Object: false,
        parseFloat: false,
        parseInt: false,
        RangeError: false,
        ReferenceError: false,
        RegExp: false,
        String: false,
        SyntaxError: false,
        TypeError: false,
        undefined: false,
        unescape: false,
        URIError: false
      },
      es5: {
        Array: false,
        Boolean: false,
        Date: false,
        decodeURI: false,
        decodeURIComponent: false,
        encodeURI: false,
        encodeURIComponent: false,
        Error: false,
        escape: false,
        eval: false,
        EvalError: false,
        Function: false,
        Infinity: false,
        isFinite: false,
        isNaN: false,
        JSON: false,
        Math: false,
        NaN: false,
        Number: false,
        Object: false,
        parseFloat: false,
        parseInt: false,
        RangeError: false,
        ReferenceError: false,
        RegExp: false,
        String: false,
        SyntaxError: false,
        TypeError: false,
        undefined: false,
        unescape: false,
        URIError: false
      },
      greasemonkey: {
        cloneInto: false,
        createObjectIn: false,
        exportFunction: false,
        GM: false,
        GM_addElement: false,
        GM_addStyle: false,
        GM_addValueChangeListener: false,
        GM_deleteValue: false,
        GM_download: false,
        GM_getResourceText: false,
        GM_getResourceURL: false,
        GM_getTab: false,
        GM_getTabs: false,
        GM_getValue: false,
        GM_info: false,
        GM_listValues: false,
        GM_log: false,
        GM_notification: false,
        GM_openInTab: false,
        GM_registerMenuCommand: false,
        GM_removeValueChangeListener: false,
        GM_saveTab: false,
        GM_setClipboard: false,
        GM_setValue: false,
        GM_unregisterMenuCommand: false,
        GM_xmlhttpRequest: false,
        unsafeWindow: false
      },
      jasmine: {
        afterAll: false,
        afterEach: false,
        beforeAll: false,
        beforeEach: false,
        describe: false,
        expect: false,
        expectAsync: false,
        fail: false,
        fdescribe: false,
        fit: false,
        it: false,
        jasmine: false,
        pending: false,
        runs: false,
        spyOn: false,
        spyOnAllFunctions: false,
        spyOnProperty: false,
        waits: false,
        waitsFor: false,
        xdescribe: false,
        xit: false
      },
      jest: {
        afterAll: false,
        afterEach: false,
        beforeAll: false,
        beforeEach: false,
        describe: false,
        expect: false,
        fit: false,
        it: false,
        jest: false,
        test: false,
        xdescribe: false,
        xit: false,
        xtest: false
      },
      jquery: {
        $: false,
        jQuery: false
      },
      meteor: {
        $: false,
        Accounts: false,
        AccountsClient: false,
        AccountsCommon: false,
        AccountsServer: false,
        App: false,
        Assets: false,
        Blaze: false,
        check: false,
        Cordova: false,
        DDP: false,
        DDPRateLimiter: false,
        DDPServer: false,
        Deps: false,
        EJSON: false,
        Email: false,
        HTTP: false,
        Log: false,
        Match: false,
        Meteor: false,
        Mongo: false,
        MongoInternals: false,
        Npm: false,
        Package: false,
        Plugin: false,
        process: false,
        Random: false,
        ReactiveDict: false,
        ReactiveVar: false,
        Router: false,
        ServiceConfiguration: false,
        Session: false,
        share: false,
        Spacebars: false,
        Template: false,
        Tinytest: false,
        Tracker: false,
        UI: false,
        Utils: false,
        WebApp: false,
        WebAppInternals: false
      },
      mocha: {
        after: false,
        afterEach: false,
        before: false,
        beforeEach: false,
        context: false,
        describe: false,
        it: false,
        mocha: false,
        run: false,
        setup: false,
        specify: false,
        suite: false,
        suiteSetup: false,
        suiteTeardown: false,
        teardown: false,
        test: false,
        xcontext: false,
        xdescribe: false,
        xit: false,
        xspecify: false
      },
      mongo: {
        _isWindows: false,
        _rand: false,
        BulkWriteResult: false,
        cat: false,
        cd: false,
        connect: false,
        db: false,
        getHostName: false,
        getMemInfo: false,
        hostname: false,
        ISODate: false,
        listFiles: false,
        load: false,
        ls: false,
        md5sumFile: false,
        mkdir: false,
        Mongo: false,
        NumberInt: false,
        NumberLong: false,
        ObjectId: false,
        PlanCache: false,
        print: false,
        printjson: false,
        pwd: false,
        quit: false,
        removeFile: false,
        rs: false,
        sh: false,
        UUID: false,
        version: false,
        WriteResult: false
      },
      nashorn: {
        __DIR__: false,
        __FILE__: false,
        __LINE__: false,
        com: false,
        edu: false,
        exit: false,
        java: false,
        Java: false,
        javafx: false,
        JavaImporter: false,
        javax: false,
        JSAdapter: false,
        load: false,
        loadWithNewGlobal: false,
        org: false,
        Packages: false,
        print: false,
        quit: false
      },
      node: {
        __dirname: false,
        __filename: false,
        AbortController: false,
        AbortSignal: false,
        atob: false,
        Blob: false,
        BroadcastChannel: false,
        btoa: false,
        Buffer: false,
        ByteLengthQueuingStrategy: false,
        clearImmediate: false,
        clearInterval: false,
        clearTimeout: false,
        CloseEvent: false,
        CompressionStream: false,
        console: false,
        CountQueuingStrategy: false,
        crypto: false,
        Crypto: false,
        CryptoKey: false,
        CustomEvent: false,
        DecompressionStream: false,
        DOMException: false,
        Event: false,
        EventTarget: false,
        exports: true,
        fetch: false,
        File: false,
        FormData: false,
        global: false,
        Headers: false,
        MessageChannel: false,
        MessageEvent: false,
        MessagePort: false,
        module: false,
        navigator: false,
        Navigator: false,
        performance: false,
        Performance: false,
        PerformanceEntry: false,
        PerformanceMark: false,
        PerformanceMeasure: false,
        PerformanceObserver: false,
        PerformanceObserverEntryList: false,
        PerformanceResourceTiming: false,
        process: false,
        queueMicrotask: false,
        ReadableByteStreamController: false,
        ReadableStream: false,
        ReadableStreamBYOBReader: false,
        ReadableStreamBYOBRequest: false,
        ReadableStreamDefaultController: false,
        ReadableStreamDefaultReader: false,
        Request: false,
        require: false,
        Response: false,
        setImmediate: false,
        setInterval: false,
        setTimeout: false,
        structuredClone: false,
        SubtleCrypto: false,
        TextDecoder: false,
        TextDecoderStream: false,
        TextEncoder: false,
        TextEncoderStream: false,
        TransformStream: false,
        TransformStreamDefaultController: false,
        URL: false,
        URLSearchParams: false,
        WebAssembly: false,
        WebSocket: false,
        WritableStream: false,
        WritableStreamDefaultController: false,
        WritableStreamDefaultWriter: false
      },
      nodeBuiltin: {
        AbortController: false,
        AbortSignal: false,
        atob: false,
        Blob: false,
        BroadcastChannel: false,
        btoa: false,
        Buffer: false,
        ByteLengthQueuingStrategy: false,
        clearImmediate: false,
        clearInterval: false,
        clearTimeout: false,
        CloseEvent: false,
        CompressionStream: false,
        console: false,
        CountQueuingStrategy: false,
        crypto: false,
        Crypto: false,
        CryptoKey: false,
        CustomEvent: false,
        DecompressionStream: false,
        DOMException: false,
        Event: false,
        EventTarget: false,
        fetch: false,
        File: false,
        FormData: false,
        global: false,
        Headers: false,
        MessageChannel: false,
        MessageEvent: false,
        MessagePort: false,
        navigator: false,
        Navigator: false,
        performance: false,
        Performance: false,
        PerformanceEntry: false,
        PerformanceMark: false,
        PerformanceMeasure: false,
        PerformanceObserver: false,
        PerformanceObserverEntryList: false,
        PerformanceResourceTiming: false,
        process: false,
        queueMicrotask: false,
        ReadableByteStreamController: false,
        ReadableStream: false,
        ReadableStreamBYOBReader: false,
        ReadableStreamBYOBRequest: false,
        ReadableStreamDefaultController: false,
        ReadableStreamDefaultReader: false,
        Request: false,
        Response: false,
        setImmediate: false,
        setInterval: false,
        setTimeout: false,
        structuredClone: false,
        SubtleCrypto: false,
        TextDecoder: false,
        TextDecoderStream: false,
        TextEncoder: false,
        TextEncoderStream: false,
        TransformStream: false,
        TransformStreamDefaultController: false,
        URL: false,
        URLSearchParams: false,
        WebAssembly: false,
        WebSocket: false,
        WritableStream: false,
        WritableStreamDefaultController: false,
        WritableStreamDefaultWriter: false
      },
      phantomjs: {
        console: true,
        exports: true,
        phantom: true,
        require: true,
        WebPage: true
      },
      prototypejs: {
        $: false,
        $$: false,
        $A: false,
        $break: false,
        $continue: false,
        $F: false,
        $H: false,
        $R: false,
        $w: false,
        Abstract: false,
        Ajax: false,
        Autocompleter: false,
        Builder: false,
        Class: false,
        Control: false,
        Draggable: false,
        Draggables: false,
        Droppables: false,
        Effect: false,
        Element: false,
        Enumerable: false,
        Event: false,
        Field: false,
        Form: false,
        Hash: false,
        Insertion: false,
        ObjectRange: false,
        PeriodicalExecuter: false,
        Position: false,
        Prototype: false,
        Scriptaculous: false,
        Selector: false,
        Sortable: false,
        SortableObserver: false,
        Sound: false,
        Template: false,
        Toggle: false,
        Try: false
      },
      protractor: {
        $: false,
        $$: false,
        browser: false,
        by: false,
        By: false,
        DartObject: false,
        element: false,
        protractor: false
      },
      qunit: {
        asyncTest: false,
        deepEqual: false,
        equal: false,
        expect: false,
        module: false,
        notDeepEqual: false,
        notEqual: false,
        notOk: false,
        notPropEqual: false,
        notStrictEqual: false,
        ok: false,
        propEqual: false,
        QUnit: false,
        raises: false,
        start: false,
        stop: false,
        strictEqual: false,
        test: false,
        throws: false
      },
      rhino: {
        defineClass: false,
        deserialize: false,
        gc: false,
        help: false,
        importClass: false,
        importPackage: false,
        java: false,
        load: false,
        loadClass: false,
        Packages: false,
        print: false,
        quit: false,
        readFile: false,
        readUrl: false,
        runCommand: false,
        seal: false,
        serialize: false,
        spawn: false,
        sync: false,
        toint32: false,
        version: false
      },
      serviceworker: {
        addEventListener: false,
        applicationCache: false,
        atob: false,
        Blob: false,
        BroadcastChannel: false,
        btoa: false,
        ByteLengthQueuingStrategy: false,
        Cache: false,
        caches: false,
        CacheStorage: false,
        clearInterval: false,
        clearTimeout: false,
        Client: false,
        clients: false,
        Clients: false,
        close: true,
        CompressionStream: false,
        console: false,
        CountQueuingStrategy: false,
        crypto: false,
        Crypto: false,
        CryptoKey: false,
        CustomEvent: false,
        DecompressionStream: false,
        ErrorEvent: false,
        Event: false,
        ExtendableEvent: false,
        ExtendableMessageEvent: false,
        fetch: false,
        FetchEvent: false,
        File: false,
        FileReaderSync: false,
        FormData: false,
        Headers: false,
        IDBCursor: false,
        IDBCursorWithValue: false,
        IDBDatabase: false,
        IDBFactory: false,
        IDBIndex: false,
        IDBKeyRange: false,
        IDBObjectStore: false,
        IDBOpenDBRequest: false,
        IDBRequest: false,
        IDBTransaction: false,
        IDBVersionChangeEvent: false,
        ImageData: false,
        importScripts: false,
        indexedDB: false,
        location: false,
        MessageChannel: false,
        MessageEvent: false,
        MessagePort: false,
        name: false,
        navigator: false,
        Notification: false,
        onclose: true,
        onconnect: true,
        onerror: true,
        onfetch: true,
        oninstall: true,
        onlanguagechange: true,
        onmessage: true,
        onmessageerror: true,
        onnotificationclick: true,
        onnotificationclose: true,
        onoffline: true,
        ononline: true,
        onpush: true,
        onpushsubscriptionchange: true,
        onrejectionhandled: true,
        onsync: true,
        onunhandledrejection: true,
        performance: false,
        Performance: false,
        PerformanceEntry: false,
        PerformanceMark: false,
        PerformanceMeasure: false,
        PerformanceNavigation: false,
        PerformanceObserver: false,
        PerformanceObserverEntryList: false,
        PerformanceResourceTiming: false,
        PerformanceTiming: false,
        postMessage: true,
        queueMicrotask: false,
        ReadableByteStreamController: false,
        ReadableStream: false,
        ReadableStreamBYOBReader: false,
        ReadableStreamBYOBRequest: false,
        ReadableStreamDefaultController: false,
        ReadableStreamDefaultReader: false,
        registration: false,
        removeEventListener: false,
        Request: false,
        Response: false,
        self: false,
        ServiceWorker: false,
        ServiceWorkerContainer: false,
        ServiceWorkerGlobalScope: false,
        ServiceWorkerMessageEvent: false,
        ServiceWorkerRegistration: false,
        setInterval: false,
        setTimeout: false,
        skipWaiting: false,
        SubtleCrypto: false,
        TextDecoder: false,
        TextDecoderStream: false,
        TextEncoder: false,
        TextEncoderStream: false,
        TransformStream: false,
        TransformStreamDefaultController: false,
        URL: false,
        URLSearchParams: false,
        WebAssembly: false,
        WebSocket: false,
        WindowClient: false,
        Worker: false,
        WorkerGlobalScope: false,
        WritableStream: false,
        WritableStreamDefaultController: false,
        WritableStreamDefaultWriter: false,
        XMLHttpRequest: false
      },
      "shared-node-browser": {
        AbortController: false,
        AbortSignal: false,
        atob: false,
        Blob: false,
        BroadcastChannel: false,
        btoa: false,
        ByteLengthQueuingStrategy: false,
        clearInterval: false,
        clearTimeout: false,
        CloseEvent: false,
        CompressionStream: false,
        console: false,
        CountQueuingStrategy: false,
        crypto: false,
        Crypto: false,
        CryptoKey: false,
        CustomEvent: false,
        DecompressionStream: false,
        DOMException: false,
        Event: false,
        EventTarget: false,
        fetch: false,
        File: false,
        FormData: false,
        Headers: false,
        MessageChannel: false,
        MessageEvent: false,
        MessagePort: false,
        navigator: false,
        Navigator: false,
        performance: false,
        Performance: false,
        PerformanceEntry: false,
        PerformanceMark: false,
        PerformanceMeasure: false,
        PerformanceObserver: false,
        PerformanceObserverEntryList: false,
        PerformanceResourceTiming: false,
        queueMicrotask: false,
        ReadableByteStreamController: false,
        ReadableStream: false,
        ReadableStreamBYOBReader: false,
        ReadableStreamBYOBRequest: false,
        ReadableStreamDefaultController: false,
        ReadableStreamDefaultReader: false,
        Request: false,
        Response: false,
        setInterval: false,
        setTimeout: false,
        structuredClone: false,
        SubtleCrypto: false,
        TextDecoder: false,
        TextDecoderStream: false,
        TextEncoder: false,
        TextEncoderStream: false,
        TransformStream: false,
        TransformStreamDefaultController: false,
        URL: false,
        URLSearchParams: false,
        WebAssembly: false,
        WebSocket: false,
        WritableStream: false,
        WritableStreamDefaultController: false,
        WritableStreamDefaultWriter: false
      },
      shelljs: {
        cat: false,
        cd: false,
        chmod: false,
        config: false,
        cp: false,
        dirs: false,
        echo: false,
        env: false,
        error: false,
        exec: false,
        exit: false,
        find: false,
        grep: false,
        head: false,
        ln: false,
        ls: false,
        mkdir: false,
        mv: false,
        popd: false,
        pushd: false,
        pwd: false,
        rm: false,
        sed: false,
        set: false,
        ShellString: false,
        sort: false,
        tail: false,
        tempdir: false,
        test: false,
        touch: false,
        uniq: false,
        which: false
      },
      vitest: {
        afterAll: false,
        afterEach: false,
        assert: false,
        assertType: false,
        beforeAll: false,
        beforeEach: false,
        chai: false,
        describe: false,
        expect: false,
        expectTypeOf: false,
        it: false,
        onTestFailed: false,
        onTestFinished: false,
        suite: false,
        test: false,
        vi: false,
        vitest: false
      },
      webextensions: {
        browser: false,
        chrome: false,
        opr: false
      },
      worker: {
        AbortController: false,
        AbortSignal: false,
        addEventListener: false,
        ai: false,
        atob: false,
        AudioData: false,
        AudioDecoder: false,
        AudioEncoder: false,
        BackgroundFetchManager: false,
        BackgroundFetchRecord: false,
        BackgroundFetchRegistration: false,
        BarcodeDetector: false,
        Blob: false,
        BroadcastChannel: false,
        btoa: false,
        ByteLengthQueuingStrategy: false,
        Cache: false,
        caches: false,
        CacheStorage: false,
        cancelAnimationFrame: false,
        CanvasGradient: false,
        CanvasPattern: false,
        clearInterval: false,
        clearTimeout: false,
        close: false,
        CloseEvent: false,
        CompressionStream: false,
        console: false,
        CountQueuingStrategy: false,
        createImageBitmap: false,
        CropTarget: false,
        crossOriginIsolated: false,
        crypto: false,
        Crypto: false,
        CryptoKey: false,
        CSSSkewX: false,
        CSSSkewY: false,
        CustomEvent: false,
        DecompressionStream: false,
        DedicatedWorkerGlobalScope: false,
        dispatchEvent: false,
        DOMException: false,
        DOMMatrix: false,
        DOMMatrixReadOnly: false,
        DOMPoint: false,
        DOMPointReadOnly: false,
        DOMQuad: false,
        DOMRect: false,
        DOMRectReadOnly: false,
        DOMStringList: false,
        EncodedAudioChunk: false,
        EncodedVideoChunk: false,
        ErrorEvent: false,
        Event: false,
        EventSource: false,
        EventTarget: false,
        fetch: false,
        File: false,
        FileList: false,
        FileReader: false,
        FileReaderSync: false,
        FileSystemDirectoryHandle: false,
        FileSystemFileHandle: false,
        FileSystemHandle: false,
        FileSystemSyncAccessHandle: false,
        FileSystemWritableFileStream: false,
        FontFace: false,
        fonts: false,
        FormData: false,
        GPU: false,
        GPUAdapter: false,
        GPUAdapterInfo: false,
        GPUBindGroup: false,
        GPUBindGroupLayout: false,
        GPUBuffer: false,
        GPUBufferUsage: false,
        GPUCanvasContext: false,
        GPUColorWrite: false,
        GPUCommandBuffer: false,
        GPUCommandEncoder: false,
        GPUCompilationInfo: false,
        GPUCompilationMessage: false,
        GPUComputePassEncoder: false,
        GPUComputePipeline: false,
        GPUDevice: false,
        GPUDeviceLostInfo: false,
        GPUError: false,
        GPUExternalTexture: false,
        GPUInternalError: false,
        GPUMapMode: false,
        GPUOutOfMemoryError: false,
        GPUPipelineError: false,
        GPUPipelineLayout: false,
        GPUQuerySet: false,
        GPUQueue: false,
        GPURenderBundle: false,
        GPURenderBundleEncoder: false,
        GPURenderPassEncoder: false,
        GPURenderPipeline: false,
        GPUSampler: false,
        GPUShaderModule: false,
        GPUShaderStage: false,
        GPUSupportedFeatures: false,
        GPUSupportedLimits: false,
        GPUTexture: false,
        GPUTextureUsage: false,
        GPUTextureView: false,
        GPUUncapturedErrorEvent: false,
        GPUValidationError: false,
        Headers: false,
        HID: false,
        HIDConnectionEvent: false,
        HIDDevice: false,
        HIDInputReportEvent: false,
        IDBCursor: false,
        IDBCursorWithValue: false,
        IDBDatabase: false,
        IDBFactory: false,
        IDBIndex: false,
        IDBKeyRange: false,
        IDBObjectStore: false,
        IDBOpenDBRequest: false,
        IDBRequest: false,
        IDBTransaction: false,
        IDBVersionChangeEvent: false,
        IdleDetector: false,
        ImageBitmap: false,
        ImageBitmapRenderingContext: false,
        ImageData: false,
        ImageDecoder: false,
        ImageTrack: false,
        ImageTrackList: false,
        importScripts: false,
        indexedDB: false,
        isSecureContext: false,
        location: false,
        Lock: false,
        LockManager: false,
        MediaCapabilities: false,
        MediaSource: false,
        MediaSourceHandle: false,
        MessageChannel: false,
        MessageEvent: false,
        MessagePort: false,
        name: false,
        NavigationPreloadManager: false,
        navigator: false,
        NavigatorUAData: false,
        NetworkInformation: false,
        Notification: false,
        OffscreenCanvas: false,
        OffscreenCanvasRenderingContext2D: false,
        onerror: true,
        onlanguagechange: true,
        onmessage: true,
        onmessageerror: true,
        onrejectionhandled: true,
        onunhandledrejection: true,
        origin: false,
        Path2D: false,
        performance: false,
        Performance: false,
        PerformanceEntry: false,
        PerformanceMark: false,
        PerformanceMeasure: false,
        PerformanceObserver: false,
        PerformanceObserverEntryList: false,
        PerformanceResourceTiming: false,
        PerformanceServerTiming: false,
        PeriodicSyncManager: false,
        Permissions: false,
        PermissionStatus: false,
        PERSISTENT: false,
        postMessage: false,
        PressureObserver: false,
        PressureRecord: false,
        ProgressEvent: false,
        PromiseRejectionEvent: false,
        PushManager: false,
        PushSubscription: false,
        PushSubscriptionOptions: false,
        queueMicrotask: false,
        ReadableByteStreamController: false,
        ReadableStream: false,
        ReadableStreamBYOBReader: false,
        ReadableStreamBYOBRequest: false,
        ReadableStreamDefaultController: false,
        ReadableStreamDefaultReader: false,
        removeEventListener: false,
        reportError: false,
        ReportingObserver: false,
        Request: false,
        requestAnimationFrame: false,
        Response: false,
        RTCDataChannel: false,
        RTCEncodedAudioFrame: false,
        RTCEncodedVideoFrame: false,
        scheduler: false,
        Scheduler: false,
        SecurityPolicyViolationEvent: false,
        self: false,
        Serial: false,
        SerialPort: false,
        ServiceWorkerRegistration: false,
        setInterval: false,
        setTimeout: false,
        SourceBuffer: false,
        SourceBufferList: false,
        StorageBucket: false,
        StorageBucketManager: false,
        StorageManager: false,
        structuredClone: false,
        SubtleCrypto: false,
        SyncManager: false,
        TaskController: false,
        TaskPriorityChangeEvent: false,
        TaskSignal: false,
        TEMPORARY: false,
        TextDecoder: false,
        TextDecoderStream: false,
        TextEncoder: false,
        TextEncoderStream: false,
        TextMetrics: false,
        TransformStream: false,
        TransformStreamDefaultController: false,
        TrustedHTML: false,
        TrustedScript: false,
        TrustedScriptURL: false,
        TrustedTypePolicy: false,
        TrustedTypePolicyFactory: false,
        trustedTypes: false,
        URL: false,
        URLPattern: false,
        URLSearchParams: false,
        USB: false,
        USBAlternateInterface: false,
        USBConfiguration: false,
        USBConnectionEvent: false,
        USBDevice: false,
        USBEndpoint: false,
        USBInterface: false,
        USBInTransferResult: false,
        USBIsochronousInTransferPacket: false,
        USBIsochronousInTransferResult: false,
        USBIsochronousOutTransferPacket: false,
        USBIsochronousOutTransferResult: false,
        USBOutTransferResult: false,
        UserActivation: false,
        VideoColorSpace: false,
        VideoDecoder: false,
        VideoEncoder: false,
        VideoFrame: false,
        WebAssembly: false,
        WebGL2RenderingContext: false,
        WebGLActiveInfo: false,
        WebGLBuffer: false,
        WebGLContextEvent: false,
        WebGLFramebuffer: false,
        WebGLObject: false,
        WebGLProgram: false,
        WebGLQuery: false,
        WebGLRenderbuffer: false,
        WebGLRenderingContext: false,
        WebGLSampler: false,
        WebGLShader: false,
        WebGLShaderPrecisionFormat: false,
        WebGLSync: false,
        WebGLTexture: false,
        WebGLTransformFeedback: false,
        WebGLUniformLocation: false,
        WebGLVertexArrayObject: false,
        webkitRequestFileSystem: false,
        webkitRequestFileSystemSync: false,
        webkitResolveLocalFileSystemSyncURL: false,
        webkitResolveLocalFileSystemURL: false,
        WebSocket: false,
        WebSocketError: false,
        WebSocketStream: false,
        WebTransport: false,
        WebTransportBidirectionalStream: false,
        WebTransportDatagramDuplexStream: false,
        WebTransportError: false,
        WGSLLanguageFeatures: false,
        Worker: false,
        WorkerGlobalScope: false,
        WorkerLocation: false,
        WorkerNavigator: false,
        WritableStream: false,
        WritableStreamDefaultController: false,
        WritableStreamDefaultWriter: false,
        XMLHttpRequest: false,
        XMLHttpRequestEventTarget: false,
        XMLHttpRequestUpload: false
      },
      wsh: {
        ActiveXObject: false,
        CollectGarbage: false,
        Debug: false,
        Enumerator: false,
        GetObject: false,
        RuntimeObject: false,
        ScriptEngine: false,
        ScriptEngineBuildVersion: false,
        ScriptEngineMajorVersion: false,
        ScriptEngineMinorVersion: false,
        VBArray: false,
        WScript: false,
        WSH: false
      },
      yui: {
        YAHOO: false,
        YAHOO_config: false,
        YUI: false,
        YUI_config: false
      }
    };
  }
});

// ../../node_modules/globals/index.js
var require_globals2 = __commonJS({
  "../../node_modules/globals/index.js"(exports, module) {
    module.exports = require_globals();
  }
});

// node_modules/@eslint/js/package.json
var require_package = __commonJS({
  "node_modules/@eslint/js/package.json"(exports, module) {
    module.exports = {
      name: "@eslint/js",
      version: "9.38.0",
      description: "ESLint JavaScript language implementation",
      funding: "https://eslint.org/donate",
      main: "./src/index.js",
      types: "./types/index.d.ts",
      scripts: {
        "test:types": "tsc -p tests/types/tsconfig.json"
      },
      files: [
        "LICENSE",
        "README.md",
        "src",
        "types"
      ],
      publishConfig: {
        access: "public"
      },
      repository: {
        type: "git",
        url: "https://github.com/eslint/eslint.git",
        directory: "packages/js"
      },
      homepage: "https://eslint.org",
      bugs: "https://github.com/eslint/eslint/issues/",
      keywords: [
        "javascript",
        "eslint-plugin",
        "eslint"
      ],
      license: "MIT",
      engines: {
        node: "^18.18.0 || ^20.9.0 || >=21.1.0"
      }
    };
  }
});

// node_modules/@eslint/js/src/configs/eslint-all.js
var require_eslint_all = __commonJS({
  "node_modules/@eslint/js/src/configs/eslint-all.js"(exports, module) {
    module.exports = Object.freeze({
      rules: Object.freeze({
        "accessor-pairs": "error",
        "array-callback-return": "error",
        "arrow-body-style": "error",
        "block-scoped-var": "error",
        "camelcase": "error",
        "capitalized-comments": "error",
        "class-methods-use-this": "error",
        "complexity": "error",
        "consistent-return": "error",
        "consistent-this": "error",
        "constructor-super": "error",
        "curly": "error",
        "default-case": "error",
        "default-case-last": "error",
        "default-param-last": "error",
        "dot-notation": "error",
        "eqeqeq": "error",
        "for-direction": "error",
        "func-name-matching": "error",
        "func-names": "error",
        "func-style": "error",
        "getter-return": "error",
        "grouped-accessor-pairs": "error",
        "guard-for-in": "error",
        "id-denylist": "error",
        "id-length": "error",
        "id-match": "error",
        "init-declarations": "error",
        "logical-assignment-operators": "error",
        "max-classes-per-file": "error",
        "max-depth": "error",
        "max-lines": "error",
        "max-lines-per-function": "error",
        "max-nested-callbacks": "error",
        "max-params": "error",
        "max-statements": "error",
        "new-cap": "error",
        "no-alert": "error",
        "no-array-constructor": "error",
        "no-async-promise-executor": "error",
        "no-await-in-loop": "error",
        "no-bitwise": "error",
        "no-caller": "error",
        "no-case-declarations": "error",
        "no-class-assign": "error",
        "no-compare-neg-zero": "error",
        "no-cond-assign": "error",
        "no-console": "error",
        "no-const-assign": "error",
        "no-constant-binary-expression": "error",
        "no-constant-condition": "error",
        "no-constructor-return": "error",
        "no-continue": "error",
        "no-control-regex": "error",
        "no-debugger": "error",
        "no-delete-var": "error",
        "no-div-regex": "error",
        "no-dupe-args": "error",
        "no-dupe-class-members": "error",
        "no-dupe-else-if": "error",
        "no-dupe-keys": "error",
        "no-duplicate-case": "error",
        "no-duplicate-imports": "error",
        "no-else-return": "error",
        "no-empty": "error",
        "no-empty-character-class": "error",
        "no-empty-function": "error",
        "no-empty-pattern": "error",
        "no-empty-static-block": "error",
        "no-eq-null": "error",
        "no-eval": "error",
        "no-ex-assign": "error",
        "no-extend-native": "error",
        "no-extra-bind": "error",
        "no-extra-boolean-cast": "error",
        "no-extra-label": "error",
        "no-fallthrough": "error",
        "no-func-assign": "error",
        "no-global-assign": "error",
        "no-implicit-coercion": "error",
        "no-implicit-globals": "error",
        "no-implied-eval": "error",
        "no-import-assign": "error",
        "no-inline-comments": "error",
        "no-inner-declarations": "error",
        "no-invalid-regexp": "error",
        "no-invalid-this": "error",
        "no-irregular-whitespace": "error",
        "no-iterator": "error",
        "no-label-var": "error",
        "no-labels": "error",
        "no-lone-blocks": "error",
        "no-lonely-if": "error",
        "no-loop-func": "error",
        "no-loss-of-precision": "error",
        "no-magic-numbers": "error",
        "no-misleading-character-class": "error",
        "no-multi-assign": "error",
        "no-multi-str": "error",
        "no-negated-condition": "error",
        "no-nested-ternary": "error",
        "no-new": "error",
        "no-new-func": "error",
        "no-new-native-nonconstructor": "error",
        "no-new-wrappers": "error",
        "no-nonoctal-decimal-escape": "error",
        "no-obj-calls": "error",
        "no-object-constructor": "error",
        "no-octal": "error",
        "no-octal-escape": "error",
        "no-param-reassign": "error",
        "no-plusplus": "error",
        "no-promise-executor-return": "error",
        "no-proto": "error",
        "no-prototype-builtins": "error",
        "no-redeclare": "error",
        "no-regex-spaces": "error",
        "no-restricted-exports": "error",
        "no-restricted-globals": "error",
        "no-restricted-imports": "error",
        "no-restricted-properties": "error",
        "no-restricted-syntax": "error",
        "no-return-assign": "error",
        "no-script-url": "error",
        "no-self-assign": "error",
        "no-self-compare": "error",
        "no-sequences": "error",
        "no-setter-return": "error",
        "no-shadow": "error",
        "no-shadow-restricted-names": "error",
        "no-sparse-arrays": "error",
        "no-template-curly-in-string": "error",
        "no-ternary": "error",
        "no-this-before-super": "error",
        "no-throw-literal": "error",
        "no-unassigned-vars": "error",
        "no-undef": "error",
        "no-undef-init": "error",
        "no-undefined": "error",
        "no-underscore-dangle": "error",
        "no-unexpected-multiline": "error",
        "no-unmodified-loop-condition": "error",
        "no-unneeded-ternary": "error",
        "no-unreachable": "error",
        "no-unreachable-loop": "error",
        "no-unsafe-finally": "error",
        "no-unsafe-negation": "error",
        "no-unsafe-optional-chaining": "error",
        "no-unused-expressions": "error",
        "no-unused-labels": "error",
        "no-unused-private-class-members": "error",
        "no-unused-vars": "error",
        "no-use-before-define": "error",
        "no-useless-assignment": "error",
        "no-useless-backreference": "error",
        "no-useless-call": "error",
        "no-useless-catch": "error",
        "no-useless-computed-key": "error",
        "no-useless-concat": "error",
        "no-useless-constructor": "error",
        "no-useless-escape": "error",
        "no-useless-rename": "error",
        "no-useless-return": "error",
        "no-var": "error",
        "no-void": "error",
        "no-warning-comments": "error",
        "no-with": "error",
        "object-shorthand": "error",
        "one-var": "error",
        "operator-assignment": "error",
        "prefer-arrow-callback": "error",
        "prefer-const": "error",
        "prefer-destructuring": "error",
        "prefer-exponentiation-operator": "error",
        "prefer-named-capture-group": "error",
        "prefer-numeric-literals": "error",
        "prefer-object-has-own": "error",
        "prefer-object-spread": "error",
        "prefer-promise-reject-errors": "error",
        "prefer-regex-literals": "error",
        "prefer-rest-params": "error",
        "prefer-spread": "error",
        "prefer-template": "error",
        "preserve-caught-error": "error",
        "radix": "error",
        "require-atomic-updates": "error",
        "require-await": "error",
        "require-unicode-regexp": "error",
        "require-yield": "error",
        "sort-imports": "error",
        "sort-keys": "error",
        "sort-vars": "error",
        "strict": "error",
        "symbol-description": "error",
        "unicode-bom": "error",
        "use-isnan": "error",
        "valid-typeof": "error",
        "vars-on-top": "error",
        "yoda": "error"
      })
    });
  }
});

// node_modules/@eslint/js/src/configs/eslint-recommended.js
var require_eslint_recommended = __commonJS({
  "node_modules/@eslint/js/src/configs/eslint-recommended.js"(exports, module) {
    module.exports = Object.freeze({
      rules: Object.freeze({
        "constructor-super": "error",
        "for-direction": "error",
        "getter-return": "error",
        "no-async-promise-executor": "error",
        "no-case-declarations": "error",
        "no-class-assign": "error",
        "no-compare-neg-zero": "error",
        "no-cond-assign": "error",
        "no-const-assign": "error",
        "no-constant-binary-expression": "error",
        "no-constant-condition": "error",
        "no-control-regex": "error",
        "no-debugger": "error",
        "no-delete-var": "error",
        "no-dupe-args": "error",
        "no-dupe-class-members": "error",
        "no-dupe-else-if": "error",
        "no-dupe-keys": "error",
        "no-duplicate-case": "error",
        "no-empty": "error",
        "no-empty-character-class": "error",
        "no-empty-pattern": "error",
        "no-empty-static-block": "error",
        "no-ex-assign": "error",
        "no-extra-boolean-cast": "error",
        "no-fallthrough": "error",
        "no-func-assign": "error",
        "no-global-assign": "error",
        "no-import-assign": "error",
        "no-invalid-regexp": "error",
        "no-irregular-whitespace": "error",
        "no-loss-of-precision": "error",
        "no-misleading-character-class": "error",
        "no-new-native-nonconstructor": "error",
        "no-nonoctal-decimal-escape": "error",
        "no-obj-calls": "error",
        "no-octal": "error",
        "no-prototype-builtins": "error",
        "no-redeclare": "error",
        "no-regex-spaces": "error",
        "no-self-assign": "error",
        "no-setter-return": "error",
        "no-shadow-restricted-names": "error",
        "no-sparse-arrays": "error",
        "no-this-before-super": "error",
        "no-undef": "error",
        "no-unexpected-multiline": "error",
        "no-unreachable": "error",
        "no-unsafe-finally": "error",
        "no-unsafe-negation": "error",
        "no-unsafe-optional-chaining": "error",
        "no-unused-labels": "error",
        "no-unused-private-class-members": "error",
        "no-unused-vars": "error",
        "no-useless-backreference": "error",
        "no-useless-catch": "error",
        "no-useless-escape": "error",
        "no-with": "error",
        "require-yield": "error",
        "use-isnan": "error",
        "valid-typeof": "error"
      })
    });
  }
});

// node_modules/@eslint/js/src/index.js
var require_src = __commonJS({
  "node_modules/@eslint/js/src/index.js"(exports, module) {
    var { name, version } = require_package();
    module.exports = {
      meta: {
        name,
        version
      },
      configs: {
        all: require_eslint_all(),
        recommended: require_eslint_recommended()
      }
    };
  }
});

// src/config/es.ts
var import_globals = __toESM(require_globals2());
var import_js = __toESM(require_src());

// src/config/createRules.ts
function createRules(prefix) {
  return {
    [`${prefix}no-unused-vars`]: ["error", { argsIgnorePattern: "^_" }]
  };
}

// src/config/es.ts
async function es(options) {
  const { rules = {} } = options;
  return [
    {
      name: "w5s/es/setup",
      languageOptions: {
        ecmaVersion: dev.Project.ecmaVersion(),
        globals: {
          ...import_globals.default.browser,
          ...import_globals.default[`es${dev.Project.ecmaVersion()}`],
          ...import_globals.default.node,
          __DEV__: "readonly",
          __PROD__: "readonly",
          __TEST__: "readonly",
          document: "readonly",
          navigator: "readonly",
          window: "readonly"
        },
        parserOptions: {
          ecmaFeatures: {
            jsx: true
          },
          ecmaVersion: dev.Project.ecmaVersion(),
          sourceType: "module"
        },
        sourceType: "module"
      },
      linterOptions: {
        reportUnusedDisableDirectives: true
      }
    },
    {
      name: "w5s/es/rules",
      plugins: {},
      rules: {
        ...import_js.default.configs.recommended.rules,
        ...createRules(""),
        ...rules
      }
    }
  ];
}
var getGitignore = async (cwd, prefix = "") => {
  const gitIgnoreFile = await findUp__default.default(nodePath__default.default.join(prefix, ".gitignore"), { cwd });
  if (gitIgnoreFile != null) {
    const { patterns } = parseGitignore__default.default.parse(await fs__default.default.promises.readFile(gitIgnoreFile));
    const returnValue = patterns.map((pattern) => nodePath__default.default.join(prefix, pattern));
    return returnValue;
  }
  return [];
};
async function ignores(options = {}) {
  const cwd = process__default.default.cwd();
  return [
    {
      ignores: [
        "**/node_modules",
        "**/dist",
        "**/package-lock.json",
        "**/yarn.lock",
        "**/pnpm-lock.yaml",
        "**/bun.lockb",
        "**/.docusaurus",
        "**/output",
        "**/coverage",
        "**/temp",
        "**/.temp",
        "**/tmp",
        "**/.tmp",
        "**/.history",
        "**/.vitepress/cache",
        "**/.nuxt",
        "**/.next",
        "**/.svelte-kit",
        "**/.vercel",
        "**/.changeset",
        "**/.idea",
        "**/.cache",
        "**/.output",
        "**/.vite-inspect",
        "**/.yarn",
        "**/vendor",
        "**/vendors",
        "**/*.min.*",
        "**/*.timestamp-*.mjs",
        // esbuild/vite temporary files
        ".modules/",
        ".go/",
        ".pnpm-store/",
        // '!.*',
        // '.venv/',
        // 'deprecated/',
        // 'test-output/',
        // 'venv/',
        // '_generated_/',
        ...await getGitignore(cwd),
        ...await getGitignore(cwd, "android"),
        ...await getGitignore(cwd, "ios"),
        ...options.ignores ?? []
      ],
      name: "w5s/ignore"
    }
  ];
}
var defaultConfig = {
  enabled: true,
  indent: prettierConfig__default.default.tabWidth ?? 2,
  quotes: prettierConfig__default.default.singleQuote ? "single" : "double",
  jsx: true,
  semi: prettierConfig__default.default.semi ?? true
};
var StylisticConfig = {
  /**
   * Default config
   */
  default: defaultConfig,
  /**
   * Return a new StylisticConfig from input
   *
   * @param input
   */
  from(input) {
    return typeof input === "boolean" ? { ...defaultConfig, enabled: input } : { ...defaultConfig, ...input };
  }
};

// src/config/jsonc.ts
var defaultFiles = [`**/${dev.Project.extensionsToGlob([".json", ".json5", ".jsonc"])}`];
async function jsonc(options = {}) {
  const [jsoncPlugin, jsoncParser] = await Promise.all([
    import('eslint-plugin-jsonc'),
    dev.interopDefault(import('jsonc-eslint-parser'))
  ]);
  const { files = defaultFiles, rules = {}, stylistic: stylistic2 = true } = options;
  const { enabled: stylisticEnabled, indent } = StylisticConfig.from(stylistic2);
  return [
    {
      name: "w5s/jsonc/setup",
      plugins: {
        jsonc: await dev.interopDefault(jsoncPlugin)
      }
    },
    {
      files,
      languageOptions: {
        parser: jsoncParser
      },
      name: "w5s/jsonc/rules",
      rules: {
        ...jsoncPlugin.configs["flat/recommended-with-json"][0]?.rules,
        ...stylisticEnabled ? {
          "jsonc/array-bracket-spacing": ["error", "never"],
          "jsonc/comma-dangle": ["error", "never"],
          "jsonc/comma-style": ["error", "last"],
          "jsonc/indent": ["error", indent],
          "jsonc/key-spacing": ["error", { afterColon: true, beforeColon: false }],
          "jsonc/object-curly-newline": ["error", { consistent: true, multiline: true }],
          "jsonc/object-curly-spacing": ["error", "always"],
          "jsonc/object-property-newline": ["error", { allowMultiplePropertiesPerLine: true }],
          "jsonc/quote-props": "error",
          "jsonc/quotes": "error"
        } : {},
        ...rules
      }
    }
  ];
}
var importConfig = importPlugin__default.default.flatConfigs["recommended"];
async function imports(options = {}) {
  const { rules = {}, stylistic: stylistic2 = true } = options;
  const { enabled: stylisticEnabled } = StylisticConfig.from(stylistic2);
  return [
    {
      name: "w5s/import/rules",
      plugins: importConfig.plugins ?? {},
      rules: {
        ...importConfig?.rules,
        ...stylisticEnabled ? {
          // Stylistic rules
        } : {},
        ...rules
      }
    }
  ];
}
async function node(options = {}) {
  const [nodePlugin] = await Promise.all([
    import('eslint-plugin-n')
  ]);
  const { rules = {} } = options;
  return [
    {
      name: "w5s/node/setup",
      plugins: {
        node: await dev.interopDefault(nodePlugin)
      }
    },
    {
      name: "w5s/node/rules",
      rules: {
        // 'node/handle-callback-err': ['error', '^(err|error|_error)$'],
        "node/no-deprecated-api": "error",
        "node/no-exports-assign": "error",
        "node/no-new-require": "error",
        "node/no-path-concat": "error",
        "node/no-sync": "error",
        "node/prefer-global/buffer": ["error", "never"],
        "node/prefer-global/console": ["error", "always"],
        // 'node/prefer-global/process': ['error', 'never'],
        "node/prefer-global/url": ["error", "always"],
        "node/prefer-global/url-search-params": ["error", "always"],
        "node/process-exit-as-throw": "error",
        ...rules
      }
    }
  ];
}
async function stylistic(options = {}) {
  const [stylisticPlugin] = await Promise.all([
    dev.interopDefault(import('@stylistic/eslint-plugin'))
  ]);
  const { rules = {} } = options;
  const { enabled: stylisticEnabled, indent, jsx, quotes, semi } = StylisticConfig.from(options);
  const config = stylisticEnabled ? stylisticPlugin.configs.customize({
    indent,
    jsx,
    pluginName: "style",
    quotes,
    semi
  }) : { rules: {} };
  return [
    {
      name: "w5s/style/setup",
      plugins: {
        style: stylisticPlugin
      }
    },
    {
      name: "w5s/style/rules",
      rules: {
        ...stylisticEnabled ? {
          ...config.rules,
          "style/arrow-parens": ["error", "always"],
          "style/brace-style": ["error", "1tbs"],
          "style/operator-linebreak": ["error", "after", { overrides: { ":": "before", "?": "before", "|>": "before" } }],
          "style/quotes": ["error", quotes ?? StylisticConfig.default.quotes, { avoidEscape: true, allowTemplateLiterals: true }]
        } : {},
        ...rules
      }
    }
  ];
}
var sourceGlob = dev.Project.extensionsToGlob(dev.Project.sourceExtensions());
var defaultFiles2 = [
  `**/__mocks__/**/${sourceGlob}`,
  `**/__tests__/**/${sourceGlob}`,
  `**/?(*.)+(spec|test)${sourceGlob.slice(1)}`
];
async function test(options = {}) {
  const [vitestPlugin] = await Promise.all([
    dev.interopDefault(import('@vitest/eslint-plugin'))
  ]);
  const { files = defaultFiles2, rules = {}, stylistic: stylistic2 = true } = options;
  const { enabled: stylisticEnabled } = StylisticConfig.from(stylistic2);
  return [
    {
      name: "w5s/test/setup",
      plugins: {
        test: vitestPlugin
      }
    },
    {
      files,
      name: "w5s/test/rules",
      rules: {
        ...vitestPlugin.configs.recommended.rules,
        ...stylisticEnabled ? {} : {},
        ...rules
      }
    }
  ];
}
var defaultFiles3 = [`**/${dev.Project.extensionsToGlob(dev.Project.queryExtensions(["typescript", "typescriptreact"]))}`];
async function ts(options = {}) {
  const [tsPlugin, tsParser] = await Promise.all([
    dev.interopDefault(import('@typescript-eslint/eslint-plugin')),
    dev.interopDefault(import('@typescript-eslint/parser'))
  ]);
  const tsRecommendedRules = tsPlugin.configs["eslint-recommended"].overrides[0].rules;
  const tsStrictRules = tsPlugin.configs["strict"].rules;
  const tsTypeCheckedRules = tsPlugin.configs["recommended-type-checked-only"].rules;
  const { files = defaultFiles3, rules = {}, stylistic: stylistic2 = true, typeChecked = false } = options;
  const { enabled: stylisticEnabled } = StylisticConfig.from(stylistic2);
  return [
    {
      name: "w5s/ts/setup",
      plugins: {
        ts: await dev.interopDefault(tsPlugin)
      }
    },
    {
      files,
      languageOptions: {
        parser: tsParser,
        parserOptions: {
          sourceType: "module"
          // extraFileExtensions: componentExts.map(ext => `.${ext}`),
          // ...typeAware
          //   ? {
          //       projectService: {
          //         allowDefaultProject: ['./*.js'],
          //         defaultProject: tsconfigPath,
          //       },
          //       tsconfigRootDir: process.cwd(),
          //     }
          //   : {},
          // ...parserOptions as any,
        }
      },
      name: "w5s/ts/rules",
      rules: {
        ...dev.ESLintConfig.renameRules(
          tsRecommendedRules,
          { "@typescript-eslint": "ts" }
        ),
        ...dev.ESLintConfig.renameRules(
          tsStrictRules,
          { "@typescript-eslint": "ts" }
        ),
        "ts/ban-ts-comment": [
          "warn",
          {
            "minimumDescriptionLength": 3,
            "ts-check": false,
            "ts-expect-error": "allow-with-description",
            "ts-ignore": "allow-with-description",
            "ts-nocheck": true
          }
        ],
        "ts/no-empty-object-type": "off",
        "ts/no-explicit-any": "off",
        // if any is explicit then it's wanted
        "ts/no-namespace": "off",
        // We don't agree with community, namespaces are great and not deprecated
        ...createRules("ts/"),
        ...stylisticEnabled ? {} : {},
        ...rules
      }
    },
    ...typeChecked ? [{
      files: defaultFiles3,
      // ignores: ignoresTypeAware,
      name: "w5s/ts/rules-type-checked",
      rules: {
        ...dev.ESLintConfig.renameRules(
          tsTypeCheckedRules,
          { "@typescript-eslint": "ts" }
        )
      }
    }] : []
  ];
}
async function unicorn(options = {}) {
  const [unicornPlugin] = await Promise.all([
    import('eslint-plugin-unicorn')
  ]);
  const { rules = {}, stylistic: stylistic2 = true } = options;
  const { enabled: stylisticEnabled } = StylisticConfig.from(stylistic2);
  return [
    {
      name: "w5s/unicorn/setup",
      plugins: {
        unicorn: await dev.interopDefault(unicornPlugin)
      }
    },
    {
      name: "w5s/unicorn/rules",
      rules: {
        ...unicornPlugin.configs.recommended?.rules,
        // Disabled for safety
        "unicorn/consistent-destructuring": "off",
        "unicorn/consistent-function-scoping": "off",
        // Too many false positive
        "unicorn/filename-case": "off",
        "unicorn/import-index": "off",
        // Not playing well with ES Module
        "unicorn/new-for-builtins": "off",
        // error, @see https://github.com/sindresorhus/eslint-plugin-unicorn/issues/122
        "unicorn/no-array-callback-reference": "off",
        // Many false positive reported
        "unicorn/no-array-for-each": "off",
        // This rule could change browser compatibility
        "unicorn/no-array-method-this-argument": "off",
        // Many false positive reported
        "unicorn/no-array-reduce": "off",
        // Array#reduce can be used
        "unicorn/no-console-spaces": "off",
        "unicorn/no-fn-reference-in-iterator": "off",
        // error ?
        "unicorn/no-nested-ternary": "off",
        "unicorn/no-null": "off",
        // https://github.com/sindresorhus/eslint-plugin-unicorn/issues/612
        "unicorn/no-object-as-default-parameter": "off",
        "unicorn/no-process-exit": "off",
        "unicorn/no-unreadable-array-destructuring": "off",
        "unicorn/no-unused-properties": "warn",
        "unicorn/no-useless-undefined": "off",
        "unicorn/prefer-add-event-listener": "off",
        "unicorn/prefer-default-parameters": "off",
        "unicorn/prefer-set-has": "off",
        "unicorn/prevent-abbreviations": "off",
        // This rule is so dangerous : it potentially break code while fixing in many cases !!
        "unicorn/throw-new-error": "off",
        // Creating errors with call signature is OK
        ...stylisticEnabled ? {} : {},
        ...rules
      }
    },
    // TODO: move to another file ?
    {
      name: "w5s/unicorn/overrides",
      files: ["**/*.config.cjs", "**/*.config.js"],
      rules: {
        "unicorn/prefer-module": "off"
      }
    }
  ];
}
var defaultFiles4 = [`**/${dev.Project.extensionsToGlob(dev.Project.queryExtensions(["yaml"]))}`];
async function yml(options = {}) {
  const [ymlPlugin, ymlParser] = await Promise.all([
    import('eslint-plugin-yml'),
    dev.interopDefault(import('yaml-eslint-parser'))
  ]);
  const { files = defaultFiles4, rules = {}, stylistic: stylistic2 = true } = options;
  const { enabled: stylisticEnabled, indent, quotes } = StylisticConfig.from(stylistic2);
  return [
    {
      name: "w5s/yml/setup",
      plugins: {
        yml: await dev.interopDefault(ymlPlugin)
      }
    },
    {
      files,
      languageOptions: {
        parser: ymlParser
      },
      name: "w5s/yml/rules",
      rules: {
        ...ymlPlugin.configs["flat/recommended"][0].rules,
        ...ymlPlugin.configs["flat/recommended"][1].rules,
        ...ymlPlugin.configs["flat/recommended"][2].rules,
        ...stylisticEnabled ? {
          // ...(ymlPlugin.configs['flat/standard'][3]!.rules),
          // 'yml/array-bracket-spacing': ['error', 'never'],
          // 'yml/comma-dangle': ['error', 'never'],
          // 'yml/comma-style': ['error', 'last'],
          // 'yml/object-curly-newline': ['error', { consistent: true, multiline: true }],
          // 'yml/object-curly-spacing': ['error', 'always'],
          // 'yml/object-property-newline': ['error', { allowMultiplePropertiesPerLine: true }],
          // 'yml/quote-props': 'error',
          "style/spaced-comment": "off",
          // Fix
          "yml/block-mapping-question-indicator-newline": "error",
          "yml/block-sequence-hyphen-indicator-newline": "error",
          "yml/flow-mapping-curly-newline": "error",
          "yml/flow-mapping-curly-spacing": "error",
          "yml/flow-sequence-bracket-newline": "error",
          "yml/flow-sequence-bracket-spacing": "error",
          "yml/indent": ["error", indent === "tab" ? 2 : indent],
          "yml/key-spacing": ["error", { afterColon: true, beforeColon: false }],
          "yml/no-tab-indent": "error",
          "yml/quotes": ["error", { avoidEscape: true, prefer: quotes === "backtick" ? "single" : quotes }],
          "yml/spaced-comment": "error"
        } : {},
        ...rules
      }
    }
  ];
}

// src/defineConfig.ts
async function defineConfig(options = {}) {
  const stylisticOptions = typeof options.stylistic === "boolean" ? { enabled: options.stylistic } : { enabled: true, ...options.stylistic };
  const withDefaultStylistic = (options2) => ({ stylistic: stylisticOptions, ...options2 });
  const toOption = (optionsOrBoolean) => withDefaultStylistic(typeof optionsOrBoolean === "boolean" ? { enabled: optionsOrBoolean } : { enabled: true, ...optionsOrBoolean });
  const esOptions = toOption(options.es);
  const importOptions = toOption(options.import);
  const jsoncOptions = toOption(options.jsonc);
  const nodeOptions = toOption(options.node);
  const tsOptions = toOption(options.ts);
  const unicornOptions = toOption(options.unicorn);
  const ymlOptions = toOption(options.yml);
  let returnValue = [];
  const append = async (config) => {
    returnValue = [...returnValue, ...config];
  };
  append(await es(esOptions));
  append(await ignores(options));
  if (jsoncOptions.enabled) {
    append(await jsonc(jsoncOptions));
  }
  if (stylisticOptions.enabled) {
    append(await stylistic(stylisticOptions));
  }
  if (importOptions.enabled) {
    append(await imports(importOptions));
  }
  if (nodeOptions.enabled) {
    append(await node(nodeOptions));
  }
  if (tsOptions.enabled) {
    append(await ts(tsOptions));
  }
  if (ymlOptions.enabled) {
    append(await yml(ymlOptions));
  }
  if (unicornOptions.enabled) {
    append(await unicorn(unicornOptions));
  }
  return returnValue;
}

exports.default = defineConfig;
exports.defineConfig = defineConfig;
exports.es = es;
exports.ignores = ignores;
exports.imports = imports;
exports.jsonc = jsonc;
exports.node = node;
exports.stylistic = stylistic;
exports.test = test;
exports.ts = ts;
exports.unicorn = unicorn;
exports.yml = yml;
//# sourceMappingURL=index.cjs.map
//# sourceMappingURL=index.cjs.map